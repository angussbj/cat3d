{"version":3,"sources":["components/useEnvironment.tsx","utilities/average.ts","utilities/keys.ts","logic/Element.ts","logic/composeArrows.ts","logic/Elements.ts","logic/serialisation/serialiseNodes.ts","logic/serialisation/serialiseArrows.ts","logic/serialisation/serialiseTwoArrows.ts","components/geometries/arrowheadGeometry.ts","components/geometries/bezierTubeGeometry.ts","components/geometries/bezierSurfaceGeometry.ts","components/geometries/sphereGeometry.ts","components/useSettings.tsx","components/materials/FaceMaterial.tsx","components/materials/HighlightMaterial.tsx","components/materials/SolidMaterial.tsx","components/materials/TranslucentMaterial.tsx","ui/Colors.ts","ui/Column.tsx","ui/Row.tsx","ui/T.tsx","components/Draggable.tsx","components/entities/Arrow.tsx","components/entities/Node.tsx","components/entities/TwoArrow.tsx","components/Content.tsx","components/Lighting.tsx","components/Environment.tsx","App.tsx","index.tsx"],"names":["EnvironmentContext","createContext","setCurrentlyDragging","setOnBackgroundClick","setControlMode","controlMode","render","EnvironmentContextProvider","children","environment","Provider","value","useEnvironment","useContext","average","result","Vector3","vectors","forEach","v","add","divideScalar","length","keys","o","Object","isNodeId","id","startsWith","isArrowId","isTwoArrowId","composeArrows","arrows","nodes","arrow","domainId","codomainId","out","in","firstArrow","values","find","n","currentCodomainId","nextArrow","sequence","push","Elements","addToast","twoArrows","threeArrows","nodeIdCounter","arrowIdCounter","twoArrowIdCounter","threeArrowIdCounter","selected","urlParams","URLSearchParams","window","location","search","serialisedNodes","get","this","serialised","split","str","pieces","position","parseFloat","console","warn","deserialiseNodes","serialisedArrows","guidePoint","deserialiseArrows","serialisedTwoArrows","domainIds","codomainIds","color","Color","Math","floor","random","toString","padStart","deserialiseTwoArrows","url","URL","searchParams","set","map","x","toFixed","y","z","join","a","history","pushState","update","autoBind","domainArrows","getSelectedArrows","codomainArrows","domain","codomain","addTwoArrow","filter","selectionState","getSelectedArrowIds","event","onNodeClick","onArrowClick","onTwoArrowClick","shiftKey","ctrlKey","metaKey","getSelectedNodeIds","addArrow","trySelectArrow","selectionType","concat","appearance","addTwoArrowFromSelectionIfPossible","arrowId","deleteArrow","twoArrowId","twoArrow","includes","deleteTwoArrow","threeArrowId","threeArrow","deleteThreeArrow","key","deleteNode","isThreeArrowId","getArrowheadGeometry","points","radius","setback","resolution","curve","CatmullRomCurve3","endpoint","slice","direction","getTangent","clone","sub","arrowheadStartPoint","multiplyScalar","ConeGeometry","applyQuaternion","Quaternion","setFromUnitVectors","translate","getCatmullTubeGeometry","ParametricGeometries","TubeGeometry","getCurvedSurfaceGeometry","domainArrowsPoints","codomainArrowsPoints","domainCurves","codomainCurves","midCurve","vertices","longResolution","max","i","startCurveGranularity","endCurveGranularity","startCurve","endCurve","start","getPoint","end","mid","shortCurve","j","normals","u","w","cross","normalize","indices","b","c","d","geometry","BufferGeometry","setAttribute","BufferAttribute","Float32Array","flatMap","vs","setIndex","getSphereGeometry","semicirclePoints","Vector2","sin","PI","cos","LatheGeometry","SettingsContext","nodeRadius","guidePointRadius","highlightWidth","arrowRadius","SettingsContextProvider","useState","useSettings","FaceMaterial","opacity","attach","roughness","metalness","transparent","side","TwoPassDoubleSide","HighlightMaterial","BackSide","SolidMaterial","TranslucentMaterial","twoSided","DoubleSide","Colors","HIGHLIGHTS","BLACK","DARK","GREY","LIGHT","WHITE","LIGHTING","WARM","NEUTRAL","COLD","styled","div","Draggable","onClick","objectRef","useRef","useThree","camera","size","raycaster","useMemo","Raycaster","planeRef","Plane","mouseObjectOffset","useEffect","current","copy","screenToSpace","useCallback","screenCoords","width","height","intersection","setFromCamera","ray","intersectPlane","bind","useDrag","xy","movement","dx","dy","first","last","stopPropagation","cameraDirection","getWorldDirection","setFromNormalAndCoplanarPoint","ref","Arrow","elements","highlightColour","getArrowPoints","Node","node","TwoArrow","Content","useToasts","document","addEventListener","onKeyDown","removeEventListener","plane","altKey","button","addNode","getNodes","getArrows","getTwoArrows","Lighting","intensity","castShadow","Environment","currentlyDragging","onBackgroundClick","setRenderHelper","style","left","right","top","bottom","background","onPointerMissed","shadows","args","OrbitControls","autoRotate","App","autoDismiss","placement","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa632aba.chunk.js","sourcesContent":["import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { ControlMode } from \"./ControlMode\";\n\ntype Environment = {\n  setCurrentlyDragging: (enabled: boolean) => void;\n  setOnBackgroundClick: (handler: (event: MouseEvent) => void) => void;\n  setControlMode: (mode: ControlMode) => void;\n  controlMode: ControlMode;\n  render: () => void;\n};\n\nconst EnvironmentContext = createContext<Environment>({\n  setCurrentlyDragging: () => {},\n  setOnBackgroundClick: () => {},\n  setControlMode: () => {},\n  controlMode: \"view\",\n  render: () => {},\n});\n\nexport function EnvironmentContextProvider({\n  children,\n  environment,\n}: {\n  environment: Environment;\n  children: ReactNode;\n}): ReactElement {\n  return (\n    <EnvironmentContext.Provider value={environment}>\n      {children}\n    </EnvironmentContext.Provider>\n  );\n}\n\nexport function useEnvironment(): Environment {\n  return useContext(EnvironmentContext);\n}\n","import { Vector3 } from \"three\";\n\nexport function average(...vectors: Vector3[]): Vector3 {\n  const result = new Vector3(0, 0, 0);\n  vectors.forEach((v) => result.add(v));\n  result.divideScalar(vectors.length);\n  return result;\n}\n","export function keys<T extends Record<string, unknown>>(o: T): (keyof T)[] {\n  return Object.keys(o) as (keyof T)[];\n}\n","import { Vector3 } from \"three\";\nimport Color from \"color\";\n\nexport type NodeId = `n${number}`;\nexport type ArrowId = `1a${number}`;\nexport type TwoArrowId = `2a${number}`;\nexport type ThreeArrowId = `3a${number}`;\nexport type ElementId = NodeId | ArrowId | TwoArrowId | ThreeArrowId;\n\nexport function isNodeId(id: ElementId): id is NodeId {\n  return id.startsWith(\"n\");\n}\n\nexport function isArrowId(id: ElementId): id is ArrowId {\n  return id.startsWith(\"1a\");\n}\n\nexport function isTwoArrowId(id: ElementId): id is TwoArrowId {\n  return id.startsWith(\"2a\");\n}\n\nexport function isThreeArrowId(id: ElementId): id is ThreeArrowId {\n  return id.startsWith(\"3a\");\n}\n\nexport interface Element {\n  label?: string;\n}\n\nexport interface Node extends Element {\n  id: NodeId;\n  position: Vector3;\n}\n\nexport interface Arrow extends Element {\n  id: ArrowId;\n  domainId: NodeId;\n  codomainId: NodeId;\n  guidePoint: Vector3;\n}\n\nexport interface TwoArrow extends Element {\n  id: TwoArrowId;\n  domainIds: ArrowId[];\n  codomainIds: ArrowId[];\n  guidePoint: Vector3;\n  color: Color;\n}\n\nexport interface ThreeArrow extends Element {\n  id: ThreeArrowId;\n  domainIds: TwoArrowId[];\n  codomainIds: TwoArrowId[];\n}\n","import { Arrow, ArrowId, NodeId } from \"./Element\";\n\nexport function composeArrows(\n  arrows: Arrow[]\n): { domainId: NodeId; codomainId: NodeId; sequence: ArrowId[] } | false {\n  if (arrows.length === 0) return false;\n\n  const nodes: Record<NodeId, { in?: Arrow; out?: Arrow }> = {};\n  arrows.forEach((arrow) => {\n    const { domainId, codomainId } = arrow;\n    if (nodes[domainId]) {\n      if (!nodes[domainId].out) nodes[domainId].out = arrow;\n      else return false;\n    } else nodes[domainId] = { out: arrow };\n\n    if (nodes[codomainId]) {\n      if (!nodes[codomainId].in) nodes[codomainId].in = arrow;\n      else return false;\n    } else nodes[codomainId] = { in: arrow };\n  });\n\n  const firstArrow =\n    Object.values(nodes).find((n) => n.out && !n.in)?.out ?? arrows[0];\n  const domainId = firstArrow.domainId;\n  let currentCodomainId = firstArrow.codomainId;\n  let nextArrow = nodes[currentCodomainId].out;\n  const sequence = [firstArrow.id];\n\n  // TODO: think about an interface that would allow composition of an endomorphism with itself\n  while (nextArrow && nextArrow !== firstArrow) {\n    sequence.push(nextArrow.id);\n    currentCodomainId = nextArrow.codomainId;\n    nextArrow = nodes[currentCodomainId].out;\n  }\n\n  if (sequence.length !== arrows.length) return false;\n\n  return {\n    domainId,\n    codomainId: currentCodomainId,\n    sequence,\n  };\n}\n","import { Vector3 } from \"three\";\nimport { average, keys } from \"utilities\";\nimport { ClickDetails } from \"./ClickDetails\";\nimport autoBind from \"auto-bind\";\nimport {\n  Arrow,\n  ArrowId,\n  ElementId,\n  isArrowId,\n  isNodeId,\n  isThreeArrowId,\n  isTwoArrowId,\n  Node,\n  NodeId,\n  ThreeArrow,\n  ThreeArrowId,\n  TwoArrow,\n  TwoArrowId,\n} from \"./Element\";\nimport {\n  deserialiseArrows,\n  deserialiseNodes,\n  serialiseArrows,\n  serialiseNodes,\n} from \"./serialisation\";\nimport { SelectionState } from \"./SelectionState\";\nimport { AddToast } from \"react-toast-notifications\";\nimport { composeArrows } from \"./composeArrows\";\nimport {\n  deserialiseTwoArrows,\n  serialiseTwoArrows,\n} from \"./serialisation/serialiseTwoArrows\";\nimport Color from \"color\";\n\nexport class Elements {\n  private nodes: Record<NodeId, Node> = {};\n  private arrows: Record<ArrowId, Arrow> = {};\n  private twoArrows: Record<TwoArrowId, TwoArrow> = {};\n  private threeArrows: Record<ThreeArrowId, ThreeArrow> = {};\n  private nodeIdCounter = 0;\n  private arrowIdCounter = 0;\n  private twoArrowIdCounter = 0;\n  private threeArrowIdCounter = 0;\n  private selected: Record<ElementId, false | \"primary\" | \"secondary\"> = {};\n\n  constructor(private render: () => void, private addToast: AddToast) {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const serialisedNodes = urlParams.get(\"n\");\n    if (serialisedNodes) this.nodes = deserialiseNodes(serialisedNodes);\n    this.nodeIdCounter = keys(this.nodes).length;\n\n    const serialisedArrows = urlParams.get(\"a\");\n    if (serialisedArrows) this.arrows = deserialiseArrows(serialisedArrows);\n    this.arrowIdCounter = keys(this.arrows).length;\n\n    const serialisedTwoArrows = urlParams.get(\"a2\");\n    if (serialisedTwoArrows)\n      this.twoArrows = deserialiseTwoArrows(serialisedTwoArrows);\n    this.twoArrowIdCounter = keys(this.twoArrows).length;\n  }\n\n  // TODO: make update run after dragging\n  update(): void {\n    const url = new URL(window.location.toString());\n    url.searchParams.set(\"n\", serialiseNodes(this.nodes));\n    url.searchParams.set(\"a\", serialiseArrows(this.arrows));\n    url.searchParams.set(\"a2\", serialiseTwoArrows(this.twoArrows));\n    window.history.pushState({}, \"\", url);\n    this.render();\n  }\n\n  addNode(position: Vector3): void {\n    const id: NodeId = `n${this.nodeIdCounter}`;\n    this.nodeIdCounter += 1;\n    this.nodes[id] = { position, id };\n    this.selected = {};\n    this.update();\n    autoBind(this);\n  }\n\n  addArrow(domainId: NodeId, codomainId: NodeId): void {\n    const id: ArrowId = `1a${this.arrowIdCounter}`;\n    this.arrowIdCounter += 1;\n    this.arrows[id] = {\n      domainId,\n      codomainId,\n      id,\n      guidePoint: average(\n        this.nodes[domainId].position,\n        this.nodes[codomainId].position\n      ),\n    };\n  }\n\n  addTwoArrow(\n    domainIds: ArrowId[],\n    codomainIds: ArrowId[],\n    guidePoint: Vector3\n  ): void {\n    const id: TwoArrowId = `2a${this.twoArrowIdCounter}`;\n    this.twoArrowIdCounter += 1;\n    this.twoArrows[id] = {\n      domainIds,\n      codomainIds,\n      id,\n      guidePoint,\n      color: Color(\n        \"#\" +\n          Math.floor(Math.random() * 16777215)\n            .toString(16)\n            .padStart(6, \"0\")\n      ),\n    };\n  }\n\n  addTwoArrowFromSelectionIfPossible(): void {\n    const domainArrows = this.getSelectedArrows(\"primary\");\n    const codomainArrows = this.getSelectedArrows(\"secondary\");\n    const domain = composeArrows(domainArrows);\n    const codomain = composeArrows(codomainArrows);\n    if (!domain || !codomain) return;\n    if (\n      domain.domainId !== codomain.domainId ||\n      domain.codomainId !== codomain.codomainId\n    ) {\n      return;\n    }\n    this.addTwoArrow(\n      domain.sequence,\n      codomain.sequence,\n      average(...[...domainArrows, ...codomainArrows].map((a) => a.guidePoint))\n    );\n    this.selected = {};\n  }\n\n  getNodes(): Node[] {\n    return Object.values(this.nodes);\n  }\n\n  getArrows(): Arrow[] {\n    return Object.values(this.arrows);\n  }\n\n  getTwoArrows(): TwoArrow[] {\n    return Object.values(this.twoArrows);\n  }\n\n  getArrowPoints(id: ArrowId): [Vector3, Vector3, Vector3] {\n    const { domainId, guidePoint, codomainId } = this.arrows[id];\n    return [\n      this.nodes[domainId].position,\n      guidePoint,\n      this.nodes[codomainId].position,\n    ];\n  }\n\n  getSelectedNodeIds(): NodeId[] {\n    return keys(this.selected)\n      .filter(isNodeId)\n      .filter((x) => this.selected[x]);\n  }\n\n  getSelectedArrowIds(selectionState?: SelectionState): ArrowId[] {\n    return keys(this.selected)\n      .filter(isArrowId)\n      .filter((x) => this.selected[x] === selectionState ?? true);\n  }\n\n  getSelectedArrows(selectionState?: SelectionState): Arrow[] {\n    return this.getSelectedArrowIds(selectionState).map(\n      (id) => this.arrows[id]\n    );\n  }\n\n  onClick(id: ElementId, event: ClickDetails): void {\n    if (isNodeId(id)) this.onNodeClick(id, event);\n    else if (isArrowId(id)) this.onArrowClick(id, event);\n    else if (isTwoArrowId(id)) this.onTwoArrowClick(id, event);\n    this.update();\n  }\n\n  onNodeClick(id: NodeId, event: ClickDetails): void {\n    if (this.selectionState(id)) {\n      if (event.shiftKey) {\n        this.selected[id] = false;\n      } else {\n        this.selected = {};\n      }\n    } else if (event.shiftKey) {\n      this.selected[id] = \"primary\";\n    } else if (event.ctrlKey || event.metaKey) {\n      this.getSelectedNodeIds().forEach((domainId) => {\n        this.addArrow(domainId, id);\n      });\n      this.selected = {};\n    } else {\n      this.selected = { [id]: \"primary\" };\n    }\n  }\n\n  onArrowClick(id: ArrowId, event: ClickDetails): void {\n    if (this.selectionState(id)) {\n      if (event.shiftKey) {\n        this.selected[id] = false;\n      } else {\n        this.selected = {};\n      }\n    } else if (event.shiftKey && !(event.ctrlKey || event.metaKey)) {\n      this.trySelectArrow(id, \"primary\");\n    } else if (event.shiftKey && (event.ctrlKey || event.metaKey)) {\n      this.trySelectArrow(id, \"secondary\");\n    } else if (event.ctrlKey || event.metaKey) {\n      // TODO: behaviour of cmd+shift should be different from just cmd\n      this.trySelectArrow(id, \"secondary\");\n    } else {\n      this.selected = { [id]: \"primary\" };\n    }\n  }\n\n  onTwoArrowClick(id: TwoArrowId, event: ClickDetails): void {\n    if (this.selectionState(id)) {\n      if (event.shiftKey) {\n        this.selected[id] = false;\n      } else {\n        this.selected = {};\n      }\n    } else if (event.shiftKey) {\n      this.selected[id] = \"primary\";\n    } else {\n      this.selected[id] = \"primary\";\n    }\n  }\n\n  trySelectArrow(id: ArrowId, selectionType: SelectionState): void {\n    // TODO: how does unselecting work?\n    const proposedComposition = this.getSelectedArrows(selectionType).concat(\n      this.arrows[id]\n    );\n    if (composeArrows(proposedComposition)) this.selected[id] = selectionType;\n    else\n      this.addToast(\"Cannot compose that arrow with current selection\", {\n        appearance: \"warning\",\n      });\n    this.addTwoArrowFromSelectionIfPossible();\n  }\n\n  selectionState(id: ElementId): SelectionState {\n    return this.selected[id] ?? false;\n  }\n\n  deleteNode(id: NodeId): void {\n    keys(this.arrows).forEach((arrowId) => {\n      const arrow = this.arrows[arrowId];\n      if (arrow.codomainId === id || arrow.domainId === id) {\n        this.deleteArrow(arrowId);\n      }\n    });\n    delete this.nodes[id];\n  }\n\n  deleteArrow(id: ArrowId): void {\n    keys(this.twoArrows).forEach((twoArrowId) => {\n      const twoArrow = this.twoArrows[twoArrowId];\n      if (\n        twoArrow.codomainIds.includes(id) ||\n        twoArrow.domainIds.includes(id)\n      ) {\n        this.deleteTwoArrow(twoArrowId);\n      }\n    });\n    delete this.arrows[id];\n  }\n\n  deleteTwoArrow(id: TwoArrowId): void {\n    keys(this.threeArrows).forEach((threeArrowId) => {\n      const threeArrow = this.threeArrows[threeArrowId];\n      if (\n        threeArrow.codomainIds.includes(id) ||\n        threeArrow.domainIds.includes(id)\n      ) {\n        this.deleteThreeArrow(threeArrowId);\n      }\n    });\n    delete this.twoArrows[id];\n  }\n\n  deleteThreeArrow(id: ThreeArrowId): void {\n    delete this.threeArrows[id];\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Backspace\") {\n      keys(this.selected).forEach((id) => {\n        if (isNodeId(id)) this.deleteNode(id);\n        if (isArrowId(id)) this.deleteArrow(id);\n        if (isTwoArrowId(id)) this.deleteTwoArrow(id);\n        if (isThreeArrowId(id)) this.deleteThreeArrow(id);\n      });\n      this.selected = {};\n      this.update();\n    }\n  }\n}\n","import { Node, NodeId } from \"../Element\";\nimport { Vector3 } from \"three\";\n\nexport function serialiseNodes(nodes: Record<NodeId, Node>): string {\n  return Object.values(nodes)\n    .map((n) =>\n      [\n        n.id,\n        n.position.x.toFixed(3),\n        n.position.y.toFixed(3),\n        n.position.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseNodes(serialised: string): Record<NodeId, Node> {\n  const nodes: Record<NodeId, Node> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      nodes[pieces[0] as NodeId] = {\n        id: pieces[0] as NodeId,\n        position: new Vector3(\n          parseFloat(pieces[1]),\n          parseFloat(pieces[2]),\n          parseFloat(pieces[3])\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising Nodes, defaulting to empty\");\n    return {};\n  }\n  return nodes;\n}\n","import { Arrow, ArrowId, NodeId } from \"../Element\";\nimport { Vector3 } from \"three\";\n\nexport function serialiseArrows(arrows: Record<ArrowId, Arrow>): string {\n  return Object.values(arrows)\n    .map((a) =>\n      [\n        a.id,\n        a.domainId,\n        a.codomainId,\n        a.guidePoint.x.toFixed(3),\n        a.guidePoint.y.toFixed(3),\n        a.guidePoint.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseArrows(serialised: string): Record<ArrowId, Arrow> {\n  const arrows: Record<ArrowId, Arrow> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      arrows[pieces[0] as ArrowId] = {\n        id: pieces[0] as ArrowId,\n        domainId: pieces[1] as NodeId,\n        codomainId: pieces[2] as NodeId,\n        guidePoint: new Vector3(\n          parseFloat(pieces[3]),\n          parseFloat(pieces[4]),\n          parseFloat(pieces[5])\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising Arrows, defaulting to empty\");\n    return {};\n  }\n  return arrows;\n}\n","import { ArrowId, TwoArrow, TwoArrowId } from \"../Element\";\nimport { Vector3 } from \"three\";\nimport Color from \"color\";\n\nexport function serialiseTwoArrows(\n  twoArrows: Record<TwoArrowId, TwoArrow>\n): string {\n  return Object.values(twoArrows)\n    .map((a) =>\n      [\n        a.id,\n        a.domainIds.join(\"-\"),\n        a.codomainIds.join(\"-\"),\n        a.guidePoint.x.toFixed(3),\n        a.guidePoint.y.toFixed(3),\n        a.guidePoint.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseTwoArrows(\n  serialised: string\n): Record<TwoArrowId, TwoArrow> {\n  const twoArrows: Record<TwoArrowId, TwoArrow> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      twoArrows[pieces[0] as TwoArrowId] = {\n        id: pieces[0] as TwoArrowId,\n        domainIds: pieces[1].split(\"-\") as ArrowId[],\n        codomainIds: pieces[2].split(\"-\") as ArrowId[],\n        guidePoint: new Vector3(\n          parseFloat(pieces[3]),\n          parseFloat(pieces[4]),\n          parseFloat(pieces[5])\n        ),\n        color: Color(\n          \"#\" +\n            Math.floor(Math.random() * 16777215)\n              .toString(16)\n              .padStart(6, \"0\")\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising 2-arrows, defaulting to empty\");\n    return {};\n  }\n  return twoArrows;\n}\n","import { CatmullRomCurve3, ConeGeometry, Quaternion, Vector3 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\n\nexport function getArrowheadGeometry(\n  points: Vector3[],\n  radius = 0.05, // TODO: setting\n  length = 0.1, // TODO: setting\n  setback = 0,\n  resolution = 36\n): BufferGeometry {\n  const curve = new CatmullRomCurve3(points);\n  const endpoint = points.slice(-1)[0];\n  const direction = curve.getTangent(\n    1 - (length + setback) / points[0].clone().sub(endpoint).length()\n  );\n  const arrowheadStartPoint = endpoint\n    .clone()\n    .sub(direction.clone().multiplyScalar(length / 2 + setback));\n  return new ConeGeometry(radius, length, resolution)\n    .applyQuaternion(\n      new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), direction)\n    )\n    .translate(\n      arrowheadStartPoint.x,\n      arrowheadStartPoint.y,\n      arrowheadStartPoint.z\n    );\n}\n","import { CatmullRomCurve3, Vector3 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\nimport { ParametricGeometries } from \"three/examples/jsm/geometries/ParametricGeometries\";\n\nexport function getCatmullTubeGeometry(\n  points: [Vector3, Vector3, Vector3] | [Vector3, Vector3, Vector3, Vector3],\n  radius = 0.02,\n  resolution = 48\n): BufferGeometry {\n  return new ParametricGeometries.TubeGeometry(\n    new CatmullRomCurve3(points),\n    resolution,\n    radius,\n    12\n  );\n}\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  CatmullRomCurve3,\n  Vector3,\n} from \"three\";\n\nexport function getCurvedSurfaceGeometry(\n  domainArrowsPoints: Vector3[][],\n  codomainArrowsPoints: Vector3[][],\n  guidePoint: Vector3,\n  resolution = 32\n): BufferGeometry {\n  const domainCurves = domainArrowsPoints.map(\n    (points) => new CatmullRomCurve3(points)\n  );\n  const codomainCurves = codomainArrowsPoints.map(\n    (points) => new CatmullRomCurve3(points)\n  );\n  const midCurve = new CatmullRomCurve3([\n    domainArrowsPoints[0][0],\n    guidePoint,\n    domainArrowsPoints.slice(-1)[0].slice(-1)[0],\n  ]);\n\n  const vertices: Vector3[][] = [];\n\n  const longResolution =\n    resolution * Math.max(domainCurves.length, codomainCurves.length);\n  // TODO: longwise end points - maybe doesn't matter?\n  for (let i = 1; i < longResolution; i++) {\n    const startCurveGranularity = longResolution / domainCurves.length;\n    const endCurveGranularity = longResolution / codomainCurves.length;\n    const startCurve = domainCurves[Math.floor(i / startCurveGranularity)];\n    const endCurve = codomainCurves[Math.floor(i / endCurveGranularity)];\n    const start = startCurve.getPoint(\n      (i % Math.floor(startCurveGranularity)) / startCurveGranularity\n    );\n    const end = endCurve.getPoint(\n      (i % Math.floor(endCurveGranularity)) / endCurveGranularity\n    );\n    const mid = midCurve.getPoint(i / longResolution);\n    const shortCurve = new CatmullRomCurve3([start, mid, end]);\n    vertices.push([]);\n    for (let j = 0; j <= resolution; j++) {\n      const v = shortCurve.getPoint(j / resolution);\n      vertices[i - 1].push(v);\n    }\n  }\n\n  const normals: Vector3[] = [];\n  for (let i = 1; i < longResolution; i++) {\n    for (let j = 0; j <= resolution; j++) {\n      const v = vertices[i - 1][j];\n      const u = i > 1 ? vertices[i - 2][j] : vertices[i][j];\n      const w = j > 0 ? vertices[i - 1][j - 1] : vertices[i - 1][j + 1];\n      const n = v.clone().sub(u).cross(v.clone().sub(w)).normalize();\n      n.multiplyScalar((i > 1 ? 1 : -1) * (j > 0 ? 1 : -1));\n      normals.push(n);\n    }\n  }\n\n  const indices: number[] = [];\n  for (let i = 0; i < longResolution - 2; i++) {\n    for (let j = 0; j < resolution; j++) {\n      // indices\n      const [a, b, c, d] = [\n        j + i * (resolution + 1),\n        j + 1 + i * (resolution + 1),\n        j + (i + 1) * (resolution + 1),\n        j + 1 + (i + 1) * (resolution + 1),\n      ];\n      indices.push(a, b, c); // top left triangle\n      indices.push(d, c, b); // bottom right triangle\n    }\n  }\n\n  const geometry = new BufferGeometry();\n  geometry.setAttribute(\n    \"position\",\n    new BufferAttribute(\n      new Float32Array(\n        vertices.flatMap((vs) => vs).flatMap((v) => [v.x, v.y, v.z])\n      ),\n      3\n    )\n  );\n  geometry.setAttribute(\n    \"normal\",\n    new BufferAttribute(\n      new Float32Array(normals.flatMap((v) => [v.x, v.y, v.z])),\n      3\n    )\n  );\n  geometry.setIndex(indices);\n\n  return geometry;\n}\n","import { LatheGeometry, Vector2 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\n\nexport function getSphereGeometry(\n  radius = 0.05,\n  resolution = 12\n): BufferGeometry {\n  const semicirclePoints = [];\n  for (let i = 0; i <= resolution; i++) {\n    semicirclePoints.push(\n      new Vector2(\n        radius * Math.sin((i * Math.PI) / resolution),\n        -radius * Math.cos((i * Math.PI) / resolution)\n      )\n    );\n  }\n\n  return new LatheGeometry(semicirclePoints, 2 * resolution);\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useState,\n} from \"react\";\n\ntype Settings = {\n  nodeRadius: number;\n  guidePointRadius: number;\n  highlightWidth: number;\n  arrowRadius: number;\n};\n\nconst SettingsContext = createContext<Settings>({\n  nodeRadius: 0,\n  guidePointRadius: 0,\n  highlightWidth: 0,\n  arrowRadius: 0,\n});\n\nexport function SettingsContextProvider({\n  children,\n}: {\n  children: ReactNode;\n}): ReactElement {\n  const [nodeRadius] = useState(0.06);\n  const [guidePointRadius] = useState(0.07);\n  const [highlightWidth] = useState(0.005);\n  const [arrowRadius] = useState(0.015);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        nodeRadius,\n        guidePointRadius,\n        highlightWidth,\n        arrowRadius,\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport function useSettings(): Settings {\n  return useContext(SettingsContext);\n}\n","import React from \"react\";\nimport { TwoPassDoubleSide } from \"three\";\nimport Color from \"color\";\n\ninterface Props {\n  opacity: number;\n  color: Color;\n  twoSided?: boolean;\n}\n\nexport function FaceMaterial({ opacity, color }: Props): React.ReactElement {\n  return (\n    <meshStandardMaterial\n      attach=\"material\"\n      opacity={opacity}\n      color={color.toString()}\n      roughness={0.8}\n      metalness={0.4}\n      transparent\n      side={TwoPassDoubleSide}\n    />\n  );\n}\n","import React from \"react\";\nimport Color from \"color\";\nimport { BackSide } from \"three\";\n\ninterface Props {\n  color: Color;\n}\n\nexport function HighlightMaterial({ color }: Props): React.ReactElement {\n  return (\n    <meshBasicMaterial\n      attach=\"material\"\n      color={color.toString()}\n      side={BackSide}\n    />\n  );\n}\n","import React from \"react\";\nimport Color from \"color\";\n\ninterface Props {\n  color: Color;\n}\n\nexport function SolidMaterial({ color }: Props): React.ReactElement {\n  return (\n    <meshStandardMaterial\n      attach=\"material\"\n      color={color.toString()}\n      roughness={0.5}\n    />\n  );\n}\n","import React from \"react\";\nimport Color from \"color\";\nimport { BackSide, DoubleSide } from \"three\";\n\ninterface Props {\n  color: Color;\n  twoSided?: boolean;\n}\n\nexport function TranslucentMaterial({\n  color,\n  twoSided = false,\n}: Props): React.ReactElement {\n  return (\n    <meshStandardMaterial\n      attach=\"material\"\n      color={color.toString()}\n      opacity={0.3}\n      transparent\n      side={twoSided ? DoubleSide : BackSide}\n    />\n  );\n}\n","import Color from \"color\";\n\nexport const Colors = {\n  HIGHLIGHTS: [Color(\"#8dff13\"), Color(\"#ff12bc\")],\n  BLACK: Color(\"#000000\"),\n  DARK: Color(\"#0d1416\"),\n  GREY: Color(\"#475154\"),\n  LIGHT: Color(\"#f7f9f9\"),\n  WHITE: Color(\"#FFFFFF\"),\n  LIGHTING: {\n    WARM: Color(\"#FFCCCC\"),\n    NEUTRAL: Color(\"#E5CCE5\"),\n    COLD: Color(\"#CCCCFF\"),\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\nimport Color from \"color\";\n\ninterface Props {\n  size?: \"small\" | \"tiny\";\n  color?: Color;\n  children: React.ReactNode;\n  unselectable?: boolean;\n  monospace?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport function T({\n  size,\n  color,\n  unselectable,\n  monospace,\n  children,\n  style,\n}: Props): React.ReactElement {\n  const finalStyle = {\n    color: (color || Colors.LIGHT.fade(0.2)).toString(),\n    fontSize:\n      size === \"tiny\" ? 8 : size === \"small\" ? 11 : size === \"big\" ? 16 : 12,\n    fontFamily: monospace ? \"monospace\" : undefined,\n    ...style,\n  };\n\n  return unselectable ? (\n    <UnselectableText style={finalStyle}>{children}</UnselectableText>\n  ) : (\n    <div style={finalStyle}>{children}</div>\n  );\n}\n\nconst UnselectableText = styled.div`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n","import React, {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useDrag } from \"react-use-gesture\";\nimport { Group, Plane, Raycaster, Vector2, Vector3 } from \"three\";\nimport { useEnvironment } from \"./useEnvironment\";\nimport { ClickEvent } from \"./ClickEvent\";\n\ntype Props = {\n  position?: Vector3;\n  onClick?: (event: ClickEvent) => void;\n  children?: ReactNode;\n};\n\nexport const Draggable = ({\n  position = new Vector3(0, 0, 0),\n  onClick,\n  children,\n}: Props): ReactElement => {\n  const objectRef = useRef<Group>(null);\n  const { setCurrentlyDragging } = useEnvironment();\n  const { camera, size } = useThree();\n\n  // Raycaster and plane used to project the mouse movements from the camera onto the plane\n  const raycaster = useMemo(() => new Raycaster(), []);\n  const planeRef = useRef(new Plane(new Vector3(0, 0, 1)));\n  const mouseObjectOffset = useRef(new Vector3(0, 0, 0));\n\n  useEffect(() => {\n    if (objectRef.current) {\n      objectRef.current.position.copy(position);\n    }\n  }, []);\n\n  const screenToSpace = useCallback((x: number, y: number): Vector3 => {\n    const screenCoords = new Vector2(\n      (x / size.width) * 2 - 1,\n      -(y / size.height) * 2 + 1\n    );\n\n    const intersection = new Vector3();\n    raycaster.setFromCamera(screenCoords, camera);\n    raycaster.ray.intersectPlane(planeRef.current, intersection);\n\n    return intersection;\n  }, []);\n\n  const bind = useDrag(\n    ({ xy: [x, y], movement: [dx, dy], first, last, event }) => {\n      event.stopPropagation();\n      if (first) {\n        setCurrentlyDragging(true);\n\n        const cameraDirection = new Vector3();\n        camera.getWorldDirection(cameraDirection);\n        planeRef.current.setFromNormalAndCoplanarPoint(\n          cameraDirection,\n          objectRef.current?.position || new Vector3(0, 0, 0)\n        );\n\n        mouseObjectOffset.current =\n          objectRef.current?.position.clone().sub(screenToSpace(x, y)) ||\n          new Vector3(0, 0, 0);\n      }\n\n      if (objectRef.current) {\n        objectRef.current.position.copy(\n          screenToSpace(x, y).add(mouseObjectOffset.current)\n        );\n      }\n\n      if (last) {\n        setCurrentlyDragging(false);\n        if (objectRef.current) position.copy(objectRef.current.position);\n        if (dx === 0 && dy === 0) onClick?.(event);\n      }\n    }\n  ) as () => {};\n\n  return (\n    <group {...bind()} ref={objectRef}>\n      {children}\n    </group>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport {\n  getArrowheadGeometry,\n  getCatmullTubeGeometry,\n  getSphereGeometry,\n} from \"../geometries\";\nimport { Arrow as ArrowType, Elements } from \"logic\";\nimport { useSettings } from \"../useSettings\";\nimport {\n  HighlightMaterial,\n  SolidMaterial,\n  TranslucentMaterial,\n} from \"../materials\";\nimport { Colors } from \"ui\";\nimport { Draggable } from \"../Draggable\";\n\ninterface Props {\n  arrow: ArrowType;\n  elements: Elements;\n}\n\nexport function Arrow({\n  arrow: { id, guidePoint },\n  elements,\n}: Props): ReactElement {\n  const { arrowRadius, highlightWidth, guidePointRadius } = useSettings();\n  const selectionState = elements.selectionState(id);\n  const highlightColour = selectionState === \"primary\" ? 0 : 1;\n\n  return (\n    <>\n      <mesh\n        key={id}\n        geometry={getCatmullTubeGeometry(\n          elements.getArrowPoints(id),\n          arrowRadius\n        )}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      <mesh\n        key={id + \"arrowhead\"}\n        geometry={getArrowheadGeometry(elements.getArrowPoints(id), 0.07, 0.14)}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      {selectionState && (\n        <>\n          <mesh\n            key={id + \"highlight\"}\n            geometry={getCatmullTubeGeometry(\n              elements.getArrowPoints(id),\n              arrowRadius + highlightWidth\n            )}\n          >\n            <HighlightMaterial color={Colors.HIGHLIGHTS[highlightColour]} />\n          </mesh>\n          <Draggable position={guidePoint} key={id + \"guidePoint\"}>\n            <mesh geometry={getSphereGeometry(guidePointRadius)}>\n              <TranslucentMaterial color={Colors.HIGHLIGHTS[highlightColour]} />\n            </mesh>\n          </Draggable>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { getSphereGeometry } from \"../geometries\";\nimport { Elements, Node as NodeType } from \"logic\";\nimport { useSettings } from \"../useSettings\";\nimport { HighlightMaterial, SolidMaterial } from \"../materials\";\nimport { Colors } from \"ui\";\nimport { Draggable } from \"../Draggable\";\nimport { ClickEvent } from \"../ClickEvent\";\n\ninterface Props {\n  node: NodeType;\n  elements: Elements;\n}\n\nexport function Node({\n  node: { id, position },\n  elements,\n}: Props): ReactElement {\n  const { nodeRadius, highlightWidth } = useSettings();\n\n  return (\n    <Draggable\n      position={position}\n      key={id}\n      onClick={(event: ClickEvent): void => elements.onClick(id, event)}\n    >\n      <mesh geometry={getSphereGeometry(nodeRadius)}>\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      {elements.selectionState(id) && (\n        <mesh geometry={getSphereGeometry(nodeRadius + highlightWidth)}>\n          <HighlightMaterial color={Colors.HIGHLIGHTS[0]} />\n        </mesh>\n      )}\n    </Draggable>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Elements, TwoArrow as TwoArrowType } from \"logic\";\nimport { FaceMaterial, TranslucentMaterial } from \"../materials\";\nimport { getCurvedSurfaceGeometry, getSphereGeometry } from \"../geometries\";\nimport { Draggable } from \"../Draggable\";\nimport { Colors } from \"ui\";\nimport { useSettings } from \"../useSettings\";\n\ninterface Props {\n  twoArrow: TwoArrowType;\n  elements: Elements;\n}\n\nexport function TwoArrow({\n  twoArrow: { id, domainIds, codomainIds, guidePoint, color },\n  elements,\n}: Props): ReactElement {\n  const { guidePointRadius } = useSettings();\n  const selectionState = elements.selectionState(id);\n  return (\n    <>\n      <mesh\n        key={id}\n        geometry={getCurvedSurfaceGeometry(\n          domainIds.map(elements.getArrowPoints.bind(elements)),\n          codomainIds.map(elements.getArrowPoints.bind(elements)),\n          guidePoint\n        )}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <FaceMaterial color={color} opacity={selectionState ? 1 : 0.8} />\n      </mesh>\n      {selectionState && (\n        <Draggable position={guidePoint} key={id + \"guidePoint\"}>\n          <mesh geometry={getSphereGeometry(guidePointRadius)}>\n            <TranslucentMaterial color={Colors.HIGHLIGHTS[0]} />\n          </mesh>\n        </Draggable>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useMemo, useRef } from \"react\";\nimport { Plane, Raycaster, Vector2, Vector3 } from \"three\";\nimport { useEnvironment } from \"./useEnvironment\";\nimport { useThree } from \"@react-three/fiber\";\nimport { Elements } from \"logic\";\nimport { Arrow, Node, TwoArrow } from \"./entities\";\nimport { useToasts } from \"react-toast-notifications\";\n\nexport function Content(): React.ReactElement {\n  const { setOnBackgroundClick, render } = useEnvironment();\n  const { addToast } = useToasts();\n  const elements = useRef(new Elements(render, addToast)).current;\n  const { camera, size } = useThree();\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", elements.onKeyDown.bind(elements));\n\n    return (): void => {\n      document.removeEventListener(\n        \"keydown\",\n        elements.onKeyDown.bind(elements)\n      );\n    };\n  }, []);\n\n  const raycaster = useMemo(() => new Raycaster(), []);\n  const plane = useMemo(() => new Plane(new Vector3(0, 1, 0)), []);\n\n  // TODO: fix click behaviour after resizing\n  useEffect(\n    () =>\n      setOnBackgroundClick(() => (event: MouseEvent): void => {\n        if (\n          event.ctrlKey ||\n          event.altKey ||\n          event.metaKey ||\n          event.shiftKey ||\n          event.button > 1\n        ) {\n          return;\n        }\n\n        const screenCoords = new Vector2(\n          (event.x / size.width) * 2 - 1,\n          -(event.y / size.height) * 2 + 1\n        );\n\n        const intersection = new Vector3();\n        raycaster.setFromCamera(screenCoords, camera);\n        raycaster.ray.intersectPlane(plane, intersection);\n\n        elements.addNode(intersection);\n        render();\n      }),\n    [setOnBackgroundClick]\n  );\n\n  return (\n    <>\n      {elements.getNodes().map((node) => (\n        <Node node={node} elements={elements} key={node.id} />\n      ))}\n      {elements.getArrows().map((arrow) => (\n        <Arrow arrow={arrow} elements={elements} key={arrow.id} />\n      ))}\n      {elements.getTwoArrows().map((twoArrow) => (\n        <TwoArrow twoArrow={twoArrow} elements={elements} key={twoArrow.id} />\n      ))}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Colors } from \"ui\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={0.45} />\n      <directionalLight\n        position={[0, 0, 20]}\n        color={Colors.LIGHTING.WARM.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[17, 0, -10]}\n        color={Colors.LIGHTING.COLD.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[-17, 0, -10]}\n        color={Colors.LIGHTING.NEUTRAL.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[0, 20, 0]}\n        color={Colors.LIGHTING.WARM.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[0, -20, 0]}\n        color={Colors.LIGHTING.COLD.toString()}\n        castShadow={true}\n      />\n    </>\n  );\n};\n","import React, { ReactNode, useCallback, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { Colors } from \"ui\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { EnvironmentContextProvider } from \"./useEnvironment\";\nimport { ControlMode } from \"./ControlMode\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  const [currentlyDragging, setCurrentlyDragging] = useState(false);\n  const [controlMode, setControlMode] = useState<ControlMode>(\"view\");\n  const [onBackgroundClick, setOnBackgroundClick] = useState<\n    (event: MouseEvent) => void\n  >(() => {});\n\n  const [_, setRenderHelper] = useState(false);\n  const render = useCallback((): void => setRenderHelper((x) => !x), []);\n\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <EnvironmentContextProvider\n        environment={{\n          setCurrentlyDragging,\n          setOnBackgroundClick,\n          setControlMode,\n          controlMode,\n          render,\n        }}\n      >\n        <Canvas\n          style={{ background: Colors.BLACK.toString() }}\n          camera={{ position: [4, 4, 10] }}\n          onPointerMissed={onBackgroundClick}\n          shadows\n        >\n          <gridHelper args={[20, 20]} />\n          <Lighting />\n          {children}\n          {!currentlyDragging && controlMode == \"view\" && (\n            <OrbitControls autoRotate={false} />\n          )}\n        </Canvas>\n      </EnvironmentContextProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Content } from \"components\";\nimport { Environment } from \"./components/Environment\";\nimport { SettingsContextProvider } from \"./components/useSettings\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\n// TODO: Consider replacing the Toast component https://www.npmjs.com/package/react-toast-notifications\nfunction App(): React.ReactElement {\n  return (\n    <SettingsContextProvider>\n      <ToastProvider autoDismiss={true} placement={\"bottom-left\"}>\n        <Environment>\n          <Content />\n        </Environment>\n      </ToastProvider>\n    </SettingsContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// TODO: Replace with createRoot\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
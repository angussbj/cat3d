{"version":3,"sources":["components/useEnvironment.tsx","utilities/average.ts","utilities/keys.ts","logic/Element.ts","logic/composeArrows.ts","logic/Elements.ts","logic/serialisation/serialiseNodes.ts","logic/serialisation/serialiseArrows.ts","logic/serialisation/serialiseTwoArrows.ts","components/geometries/arrowheadGeometry.ts","components/geometries/bezierTubeGeometry.ts","components/geometries/bezierSurfaceGeometry.ts","components/geometries/sphereGeometry.ts","components/useSettings.tsx","components/materials/HighlightMaterial.tsx","components/materials/SolidMaterial.tsx","components/materials/TranslucentMaterial.tsx","ui/Colors.ts","ui/Column.tsx","ui/Row.tsx","ui/T.tsx","components/Draggable.tsx","components/entities/Arrow.tsx","components/entities/Node.tsx","components/entities/TwoArrow.tsx","components/Content.tsx","components/Lighting.tsx","components/Environment.tsx","App.tsx","index.tsx"],"names":["EnvironmentContext","createContext","setCurrentlyDragging","setOnBackgroundClick","setControlMode","controlMode","render","EnvironmentContextProvider","children","environment","Provider","value","useEnvironment","useContext","average","result","Vector3","vectors","forEach","v","add","divideScalar","length","keys","o","Object","isNodeId","id","startsWith","isArrowId","composeArrows","arrows","nodes","arrow","domainId","codomainId","out","in","firstArrow","values","find","n","currentCodomainId","nextArrow","sequence","push","Elements","addToast","twoArrows","threeArrows","nodeIdCounter","arrowIdCounter","twoArrowIdCounter","threeArrowIdCounter","selected","urlParams","URLSearchParams","window","location","search","serialisedNodes","get","this","serialised","split","str","pieces","position","parseFloat","console","warn","deserialiseNodes","serialisedArrows","guidePoint","deserialiseArrows","serialisedTwoArrows","domainIds","codomainIds","deserialiseTwoArrows","url","URL","toString","searchParams","set","map","x","toFixed","y","z","join","a","history","pushState","update","autoBind","domainArrows","getSelectedArrows","codomainArrows","domain","codomain","addTwoArrow","filter","selectionState","getSelectedArrowIds","event","onNodeClick","onArrowClick","shiftKey","ctrlKey","metaKey","getSelectedNodeIds","addArrow","trySelectArrow","selectionType","concat","appearance","addTwoArrowFromSelectionIfPossible","arrowId","deleteArrow","twoArrowId","twoArrow","includes","deleteTwoArrow","threeArrowId","threeArrow","deleteThreeArrow","key","deleteNode","isTwoArrowId","isThreeArrowId","getArrowheadGeometry","points","radius","resolution","bezier","QuadraticBezierCurve3","CubicBezierCurve3","tangent","getTangent","endpoint","slice","arrowheadStartPoint","clone","sub","multiplyScalar","ConeGeometry","applyQuaternion","Quaternion","setFromUnitVectors","translate","getBezierTubeGeometry","ParametricGeometries","TubeGeometry","getBezierSurfaceGeometry","domainArrowsPoints","codomainArrowsPoints","domainBeziers","codomainBeziers","midBezier","vertices","longResolution","Math","max","i","startBezierGranularity","endBezierGranularity","startBezier","floor","endBezier","start","getPoint","end","mid","shortBezier","j","normals","u","w","cross","normalize","indices","b","c","d","geometry","BufferGeometry","setAttribute","BufferAttribute","Float32Array","flatMap","vs","setIndex","getSphereGeometry","semicirclePoints","Vector2","sin","PI","cos","LatheGeometry","SettingsContext","nodeRadius","guidePointRadius","highlightWidth","arrowRadius","SettingsContextProvider","useState","useSettings","HighlightMaterial","color","attach","side","BackSide","SolidMaterial","emissiveIntensity","roughness","TranslucentMaterial","twoSided","opacity","transparent","DoubleSide","Colors","HIGHLIGHTS","Color","BLACK","DARK","GREY","LIGHT","WHITE","LIGHTING","WARM","NEUTRAL","COLD","styled","div","Draggable","onClick","objectRef","useRef","useThree","camera","size","raycaster","useMemo","Raycaster","planeRef","Plane","mouseObjectOffset","useEffect","current","copy","screenToSpace","useCallback","screenCoords","width","height","intersection","setFromCamera","ray","intersectPlane","bind","useDrag","xy","movement","dx","dy","first","last","stopPropagation","cameraDirection","getWorldDirection","setFromNormalAndCoplanarPoint","ref","Arrow","elements","highlightColour","getArrowPoints","Node","node","TwoArrow","Content","useToasts","document","addEventListener","onKeyDown","removeEventListener","plane","altKey","button","addNode","getNodes","getArrows","getTwoArrows","Lighting","intensity","castShadow","Environment","currentlyDragging","onBackgroundClick","setRenderHelper","style","left","right","top","bottom","background","onPointerMissed","shadows","args","OrbitControls","autoRotate","App","autoDismiss","placement","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db8e9888.chunk.js","sourcesContent":["import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { ControlMode } from \"./ControlMode\";\n\ntype Environment = {\n  setCurrentlyDragging: (enabled: boolean) => void;\n  setOnBackgroundClick: (handler: (event: MouseEvent) => void) => void;\n  setControlMode: (mode: ControlMode) => void;\n  controlMode: ControlMode;\n  render: () => void;\n};\n\nconst EnvironmentContext = createContext<Environment>({\n  setCurrentlyDragging: () => {},\n  setOnBackgroundClick: () => {},\n  setControlMode: () => {},\n  controlMode: \"view\",\n  render: () => {},\n});\n\nexport function EnvironmentContextProvider({\n  children,\n  environment,\n}: {\n  environment: Environment;\n  children: ReactNode;\n}): ReactElement {\n  return (\n    <EnvironmentContext.Provider value={environment}>\n      {children}\n    </EnvironmentContext.Provider>\n  );\n}\n\nexport function useEnvironment(): Environment {\n  return useContext(EnvironmentContext);\n}\n","import { Vector3 } from \"three\";\n\nexport function average(...vectors: Vector3[]): Vector3 {\n  const result = new Vector3(0, 0, 0);\n  vectors.forEach((v) => result.add(v));\n  result.divideScalar(vectors.length);\n  return result;\n}\n","export function keys<T extends Record<string, unknown>>(o: T): (keyof T)[] {\n  return Object.keys(o) as (keyof T)[];\n}\n","import { Vector3 } from \"three\";\n\nexport type NodeId = `n${number}`;\nexport type ArrowId = `1a${number}`;\nexport type TwoArrowId = `2a${number}`;\nexport type ThreeArrowId = `3a${number}`;\nexport type ElementId = NodeId | ArrowId | TwoArrowId | ThreeArrowId;\n\nexport function isNodeId(id: ElementId): id is NodeId {\n  return id.startsWith(\"n\");\n}\n\nexport function isArrowId(id: ElementId): id is ArrowId {\n  return id.startsWith(\"1a\");\n}\n\nexport function isTwoArrowId(id: ElementId): id is TwoArrowId {\n  return id.startsWith(\"2a\");\n}\n\nexport function isThreeArrowId(id: ElementId): id is ThreeArrowId {\n  return id.startsWith(\"3a\");\n}\n\nexport interface Element {\n  label?: string;\n}\n\nexport interface Node extends Element {\n  id: NodeId;\n  position: Vector3;\n}\n\nexport interface Arrow extends Element {\n  id: ArrowId;\n  domainId: NodeId;\n  codomainId: NodeId;\n  guidePoint: Vector3;\n}\n\nexport interface TwoArrow extends Element {\n  id: TwoArrowId;\n  domainIds: ArrowId[];\n  codomainIds: ArrowId[];\n  guidePoint: Vector3;\n}\n\nexport interface ThreeArrow extends Element {\n  id: ThreeArrowId;\n  domainIds: TwoArrowId[];\n  codomainIds: TwoArrowId[];\n}\n","import { Arrow, ArrowId, NodeId } from \"./Element\";\n\nexport function composeArrows(\n  arrows: Arrow[]\n): { domainId: NodeId; codomainId: NodeId; sequence: ArrowId[] } | false {\n  if (arrows.length === 0) return false;\n\n  const nodes: Record<NodeId, { in?: Arrow; out?: Arrow }> = {};\n  arrows.forEach((arrow) => {\n    const { domainId, codomainId } = arrow;\n    if (nodes[domainId]) {\n      if (!nodes[domainId].out) nodes[domainId].out = arrow;\n      else return false;\n    } else nodes[domainId] = { out: arrow };\n\n    if (nodes[codomainId]) {\n      if (!nodes[codomainId].in) nodes[codomainId].in = arrow;\n      else return false;\n    } else nodes[codomainId] = { in: arrow };\n  });\n\n  const firstArrow =\n    Object.values(nodes).find((n) => n.out && !n.in)?.out ?? arrows[0];\n  const domainId = firstArrow.domainId;\n  let currentCodomainId = firstArrow.codomainId;\n  let nextArrow = nodes[currentCodomainId].out;\n  const sequence = [firstArrow.id];\n\n  // TODO: think about an interface that would allow composition of an endomorphism with itself\n  while (nextArrow && nextArrow !== firstArrow) {\n    sequence.push(nextArrow.id);\n    currentCodomainId = nextArrow.codomainId;\n    nextArrow = nodes[currentCodomainId].out;\n  }\n\n  if (sequence.length !== arrows.length) return false;\n\n  return {\n    domainId,\n    codomainId: currentCodomainId,\n    sequence,\n  };\n}\n","import { Vector3 } from \"three\";\nimport { average, keys } from \"utilities\";\nimport { ClickDetails } from \"./ClickDetails\";\nimport autoBind from \"auto-bind\";\nimport {\n  Arrow,\n  ArrowId,\n  ElementId,\n  isArrowId,\n  isNodeId,\n  isThreeArrowId,\n  isTwoArrowId,\n  Node,\n  NodeId,\n  ThreeArrow,\n  ThreeArrowId,\n  TwoArrow,\n  TwoArrowId,\n} from \"./Element\";\nimport {\n  deserialiseArrows,\n  deserialiseNodes,\n  serialiseArrows,\n  serialiseNodes,\n} from \"./serialisation\";\nimport { SelectionState } from \"./SelectionState\";\nimport { AddToast } from \"react-toast-notifications\";\nimport { composeArrows } from \"./composeArrows\";\nimport {\n  deserialiseTwoArrows,\n  serialiseTwoArrows,\n} from \"./serialisation/serialiseTwoArrows\";\n\nexport class Elements {\n  private nodes: Record<NodeId, Node> = {};\n  private arrows: Record<ArrowId, Arrow> = {};\n  private twoArrows: Record<TwoArrowId, TwoArrow> = {};\n  private threeArrows: Record<ThreeArrowId, ThreeArrow> = {};\n  private nodeIdCounter = 0;\n  private arrowIdCounter = 0;\n  private twoArrowIdCounter = 0;\n  private threeArrowIdCounter = 0;\n  private selected: Record<ElementId, false | \"primary\" | \"secondary\"> = {};\n\n  constructor(private render: () => void, private addToast: AddToast) {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const serialisedNodes = urlParams.get(\"n\");\n    if (serialisedNodes) this.nodes = deserialiseNodes(serialisedNodes);\n    this.nodeIdCounter = keys(this.nodes).length;\n\n    const serialisedArrows = urlParams.get(\"a\");\n    if (serialisedArrows) this.arrows = deserialiseArrows(serialisedArrows);\n    this.arrowIdCounter = keys(this.arrows).length;\n\n    const serialisedTwoArrows = urlParams.get(\"a2\");\n    if (serialisedTwoArrows)\n      this.twoArrows = deserialiseTwoArrows(serialisedTwoArrows);\n    this.twoArrowIdCounter = keys(this.twoArrows).length;\n  }\n\n  // TODO: make update run after dragging\n  update(): void {\n    const url = new URL(window.location.toString());\n    url.searchParams.set(\"n\", serialiseNodes(this.nodes));\n    url.searchParams.set(\"a\", serialiseArrows(this.arrows));\n    url.searchParams.set(\"a2\", serialiseTwoArrows(this.twoArrows));\n    window.history.pushState({}, \"\", url);\n    this.render();\n  }\n\n  addNode(position: Vector3): void {\n    const id: NodeId = `n${this.nodeIdCounter}`;\n    this.nodeIdCounter += 1;\n    this.nodes[id] = { position, id };\n    this.selected = {};\n    this.update();\n    autoBind(this);\n  }\n\n  addArrow(domainId: NodeId, codomainId: NodeId): void {\n    const id: ArrowId = `1a${this.arrowIdCounter}`;\n    this.arrowIdCounter += 1;\n    this.arrows[id] = {\n      domainId,\n      codomainId,\n      id,\n      guidePoint: average(\n        this.nodes[domainId].position,\n        this.nodes[codomainId].position\n      ),\n    };\n  }\n\n  addTwoArrow(\n    domainIds: ArrowId[],\n    codomainIds: ArrowId[],\n    guidePoint: Vector3\n  ): void {\n    const id: TwoArrowId = `2a${this.twoArrowIdCounter}`;\n    this.twoArrowIdCounter += 1;\n    this.twoArrows[id] = {\n      domainIds,\n      codomainIds,\n      id,\n      guidePoint,\n    };\n  }\n\n  addTwoArrowFromSelectionIfPossible(): void {\n    const domainArrows = this.getSelectedArrows(\"primary\");\n    const codomainArrows = this.getSelectedArrows(\"secondary\");\n    const domain = composeArrows(domainArrows);\n    const codomain = composeArrows(codomainArrows);\n    if (!domain || !codomain) return;\n    if (\n      domain.domainId !== codomain.domainId ||\n      domain.codomainId !== codomain.codomainId\n    ) {\n      return;\n    }\n    this.addTwoArrow(\n      domain.sequence,\n      codomain.sequence,\n      average(...[...domainArrows, ...codomainArrows].map((a) => a.guidePoint))\n    );\n    this.selected = {};\n  }\n\n  getNodes(): Node[] {\n    return Object.values(this.nodes);\n  }\n\n  getArrows(): Arrow[] {\n    return Object.values(this.arrows);\n  }\n\n  getTwoArrows(): TwoArrow[] {\n    return Object.values(this.twoArrows);\n  }\n\n  getArrowPoints(id: ArrowId): [Vector3, Vector3, Vector3] {\n    const { domainId, guidePoint, codomainId } = this.arrows[id];\n    return [\n      this.nodes[domainId].position,\n      guidePoint,\n      this.nodes[codomainId].position,\n    ];\n  }\n\n  getSelectedNodeIds(): NodeId[] {\n    return keys(this.selected)\n      .filter(isNodeId)\n      .filter((x) => this.selected[x]);\n  }\n\n  getSelectedArrowIds(selectionState?: SelectionState): ArrowId[] {\n    return keys(this.selected)\n      .filter(isArrowId)\n      .filter((x) => this.selected[x] === selectionState ?? true);\n  }\n\n  getSelectedArrows(selectionState?: SelectionState): Arrow[] {\n    return this.getSelectedArrowIds(selectionState).map(\n      (id) => this.arrows[id]\n    );\n  }\n\n  onClick(id: ElementId, event: ClickDetails): void {\n    if (isNodeId(id)) this.onNodeClick(id, event);\n    else if (isArrowId(id)) this.onArrowClick(id, event);\n    this.update();\n  }\n\n  onNodeClick(id: NodeId, event: ClickDetails): void {\n    if (this.selectionState(id)) {\n      if (event.shiftKey) {\n        this.selected[id] = false;\n      } else {\n        this.selected = {};\n      }\n    } else if (event.shiftKey) {\n      this.selected[id] = \"primary\";\n    } else if (event.ctrlKey || event.metaKey) {\n      this.getSelectedNodeIds().forEach((domainId) => {\n        this.addArrow(domainId, id);\n      });\n      this.selected = {};\n    } else {\n      this.selected = { [id]: \"primary\" };\n    }\n  }\n\n  onArrowClick(id: ArrowId, event: ClickDetails): void {\n    if (this.selectionState(id)) {\n      if (event.shiftKey) {\n        this.selected[id] = false;\n      } else {\n        this.selected = {};\n      }\n    } else if (event.shiftKey && !(event.ctrlKey || event.metaKey)) {\n      this.trySelectArrow(id, \"primary\");\n    } else if (event.shiftKey && (event.ctrlKey || event.metaKey)) {\n      this.trySelectArrow(id, \"secondary\");\n    } else if (event.ctrlKey || event.metaKey) {\n      // TODO: behaviour of cmd+shift should be different from just cmd\n      this.trySelectArrow(id, \"secondary\");\n    } else {\n      this.selected = { [id]: \"primary\" };\n    }\n  }\n\n  trySelectArrow(id: ArrowId, selectionType: SelectionState): void {\n    // TODO: how does unselecting work?\n    const proposedComposition = this.getSelectedArrows(selectionType).concat(\n      this.arrows[id]\n    );\n    if (composeArrows(proposedComposition)) this.selected[id] = selectionType;\n    else\n      this.addToast(\"Cannot compose that arrow with current selection\", {\n        appearance: \"warning\",\n      });\n    this.addTwoArrowFromSelectionIfPossible();\n  }\n\n  selectionState(id: ElementId): SelectionState {\n    return this.selected[id] ?? false;\n  }\n\n  deleteNode(id: NodeId): void {\n    keys(this.arrows).forEach((arrowId) => {\n      const arrow = this.arrows[arrowId];\n      if (arrow.codomainId === id || arrow.domainId === id) {\n        this.deleteArrow(arrowId);\n      }\n    });\n    delete this.nodes[id];\n  }\n\n  deleteArrow(id: ArrowId): void {\n    keys(this.twoArrows).forEach((twoArrowId) => {\n      const twoArrow = this.twoArrows[twoArrowId];\n      if (\n        twoArrow.codomainIds.includes(id) ||\n        twoArrow.domainIds.includes(id)\n      ) {\n        this.deleteTwoArrow(twoArrowId);\n      }\n    });\n    delete this.arrows[id];\n  }\n\n  deleteTwoArrow(id: TwoArrowId): void {\n    keys(this.threeArrows).forEach((threeArrowId) => {\n      const threeArrow = this.threeArrows[threeArrowId];\n      if (\n        threeArrow.codomainIds.includes(id) ||\n        threeArrow.domainIds.includes(id)\n      ) {\n        this.deleteThreeArrow(threeArrowId);\n      }\n    });\n    delete this.twoArrows[id];\n  }\n\n  deleteThreeArrow(id: ThreeArrowId): void {\n    delete this.threeArrows[id];\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Backspace\") {\n      keys(this.selected).forEach((id) => {\n        if (isNodeId(id)) this.deleteNode(id);\n        if (isArrowId(id)) this.deleteArrow(id);\n        if (isTwoArrowId(id)) this.deleteTwoArrow(id);\n        if (isThreeArrowId(id)) this.deleteThreeArrow(id);\n      });\n      this.selected = {};\n      this.update();\n    }\n  }\n}\n","import { Node, NodeId } from \"../Element\";\nimport { Vector3 } from \"three\";\n\nexport function serialiseNodes(nodes: Record<NodeId, Node>): string {\n  return Object.values(nodes)\n    .map((n) =>\n      [\n        n.id,\n        n.position.x.toFixed(3),\n        n.position.y.toFixed(3),\n        n.position.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseNodes(serialised: string): Record<NodeId, Node> {\n  const nodes: Record<NodeId, Node> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      nodes[pieces[0] as NodeId] = {\n        id: pieces[0] as NodeId,\n        position: new Vector3(\n          parseFloat(pieces[1]),\n          parseFloat(pieces[2]),\n          parseFloat(pieces[3])\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising Nodes, defaulting to empty\");\n    return {};\n  }\n  return nodes;\n}\n","import { Arrow, ArrowId, NodeId } from \"../Element\";\nimport { Vector3 } from \"three\";\n\nexport function serialiseArrows(arrows: Record<ArrowId, Arrow>): string {\n  return Object.values(arrows)\n    .map((a) =>\n      [\n        a.id,\n        a.domainId,\n        a.codomainId,\n        a.guidePoint.x.toFixed(3),\n        a.guidePoint.y.toFixed(3),\n        a.guidePoint.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseArrows(serialised: string): Record<ArrowId, Arrow> {\n  const arrows: Record<ArrowId, Arrow> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      arrows[pieces[0] as ArrowId] = {\n        id: pieces[0] as ArrowId,\n        domainId: pieces[1] as NodeId,\n        codomainId: pieces[2] as NodeId,\n        guidePoint: new Vector3(\n          parseFloat(pieces[3]),\n          parseFloat(pieces[4]),\n          parseFloat(pieces[5])\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising Arrows, defaulting to empty\");\n    return {};\n  }\n  return arrows;\n}\n","import { ArrowId, TwoArrow, TwoArrowId } from \"../Element\";\nimport { Vector3 } from \"three\";\n\nexport function serialiseTwoArrows(\n  twoArrows: Record<TwoArrowId, TwoArrow>\n): string {\n  return Object.values(twoArrows)\n    .map((a) =>\n      [\n        a.id,\n        a.domainIds.join(\"-\"),\n        a.codomainIds.join(\"-\"),\n        a.guidePoint.x.toFixed(3),\n        a.guidePoint.y.toFixed(3),\n        a.guidePoint.z.toFixed(3),\n      ].join(\"*\")\n    )\n    .join(\"_\");\n}\n\nexport function deserialiseTwoArrows(\n  serialised: string\n): Record<TwoArrowId, TwoArrow> {\n  const twoArrows: Record<TwoArrowId, TwoArrow> = {};\n  try {\n    serialised.split(\"_\").forEach((str) => {\n      const pieces = str.split(\"*\");\n      twoArrows[pieces[0] as TwoArrowId] = {\n        id: pieces[0] as TwoArrowId,\n        domainIds: pieces[1].split(\"-\") as ArrowId[],\n        codomainIds: pieces[2].split(\"-\") as ArrowId[],\n        guidePoint: new Vector3(\n          parseFloat(pieces[3]),\n          parseFloat(pieces[4]),\n          parseFloat(pieces[5])\n        ),\n      };\n    });\n  } catch {\n    // eslint-disable-next-line no-console\n    console.warn(\"Error deserialising 2-arrows, defaulting to empty\");\n    return {};\n  }\n  return twoArrows;\n}\n","import {\n  ConeGeometry,\n  CubicBezierCurve3,\n  QuadraticBezierCurve3,\n  Quaternion,\n  Vector3,\n} from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\n\nexport function getArrowheadGeometry(\n  points: [Vector3, Vector3, Vector3] | [Vector3, Vector3, Vector3, Vector3],\n  radius = 0.05, // TODO: setting\n  length = 0.1, // TODO: setting\n  setback = 0,\n  resolution = 36\n): BufferGeometry {\n  const bezier =\n    points.length === 3\n      ? new QuadraticBezierCurve3(...points)\n      : new CubicBezierCurve3(...points);\n  const tangent = bezier.getTangent(1);\n  const endpoint = points.slice(-1)[0];\n  const arrowheadStartPoint = endpoint\n    .clone()\n    .sub(tangent.clone().multiplyScalar(length));\n  return new ConeGeometry(radius, length, resolution)\n    .applyQuaternion(\n      new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), tangent)\n    )\n    .translate(\n      arrowheadStartPoint.x,\n      arrowheadStartPoint.y,\n      arrowheadStartPoint.z\n    );\n}\n","import { CubicBezierCurve3, QuadraticBezierCurve3, Vector3 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\nimport { ParametricGeometries } from \"three/examples/jsm/geometries/ParametricGeometries\";\n\nexport function getBezierTubeGeometry(\n  points: [Vector3, Vector3, Vector3] | [Vector3, Vector3, Vector3, Vector3],\n  radius = 0.02,\n  resolution = 48\n): BufferGeometry {\n  return new ParametricGeometries.TubeGeometry(\n    points.length === 3\n      ? new QuadraticBezierCurve3(...points)\n      : new CubicBezierCurve3(...points),\n    resolution,\n    radius,\n    12\n  );\n}\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  CubicBezierCurve3,\n  QuadraticBezierCurve3,\n  Vector3,\n} from \"three\";\nimport { BezierPoints } from \"./BezierPoints\";\n\nexport function getBezierSurfaceGeometry(\n  domainArrowsPoints: BezierPoints[],\n  codomainArrowsPoints: BezierPoints[],\n  guidePoint: Vector3,\n  resolution = 32\n): BufferGeometry {\n  const domainBeziers = domainArrowsPoints.map((points) =>\n    points.length === 3\n      ? new QuadraticBezierCurve3(...points)\n      : new CubicBezierCurve3(...points)\n  );\n  const codomainBeziers = codomainArrowsPoints.map((points) =>\n    points.length === 3\n      ? new QuadraticBezierCurve3(...points)\n      : new CubicBezierCurve3(...points)\n  );\n  const midBezier = new QuadraticBezierCurve3(\n    domainArrowsPoints[0][0],\n    guidePoint,\n    domainArrowsPoints.slice(-1)[0].slice(-1)[0]\n  );\n\n  const vertices: Vector3[][] = [];\n\n  const longResolution =\n    resolution * Math.max(domainBeziers.length, codomainBeziers.length);\n  // TODO: longwise end points - maybe doesn't matter?\n  for (let i = 1; i < longResolution; i++) {\n    const startBezierGranularity = longResolution / domainBeziers.length;\n    const endBezierGranularity = longResolution / codomainBeziers.length;\n    const startBezier = domainBeziers[Math.floor(i / startBezierGranularity)];\n    const endBezier = codomainBeziers[Math.floor(i / endBezierGranularity)];\n    const start = startBezier.getPoint(\n      (i % Math.floor(startBezierGranularity)) / startBezierGranularity\n    );\n    const end = endBezier.getPoint(\n      (i % Math.floor(endBezierGranularity)) / endBezierGranularity\n    );\n    const mid = midBezier.getPoint(i / longResolution);\n    const shortBezier = new QuadraticBezierCurve3(start, mid, end);\n    vertices.push([]);\n    for (let j = 0; j <= resolution; j++) {\n      const v = shortBezier.getPoint(j / resolution);\n      vertices[i - 1].push(v);\n    }\n  }\n\n  const normals: Vector3[] = [];\n  for (let i = 1; i < longResolution; i++) {\n    for (let j = 0; j <= resolution; j++) {\n      const v = vertices[i - 1][j];\n      const u = i > 1 ? vertices[i - 2][j] : vertices[i][j];\n      const w = j > 0 ? vertices[i - 1][j - 1] : vertices[i - 1][j + 1];\n      const n = v.clone().sub(u).cross(v.clone().sub(w)).normalize();\n      n.multiplyScalar((i > 1 ? 1 : -1) * (j > 0 ? 1 : -1));\n      normals.push(n);\n    }\n  }\n\n  const indices: number[] = [];\n  for (let i = 0; i < longResolution - 2; i++) {\n    for (let j = 0; j < resolution; j++) {\n      // indices\n      const [a, b, c, d] = [\n        j + i * (resolution + 1),\n        j + 1 + i * (resolution + 1),\n        j + (i + 1) * (resolution + 1),\n        j + 1 + (i + 1) * (resolution + 1),\n      ];\n      indices.push(a, b, c); // top left triangle\n      indices.push(d, c, b); // bottom right triangle\n    }\n  }\n\n  const geometry = new BufferGeometry();\n  geometry.setAttribute(\n    \"position\",\n    new BufferAttribute(\n      new Float32Array(\n        vertices.flatMap((vs) => vs).flatMap((v) => [v.x, v.y, v.z])\n      ),\n      3\n    )\n  );\n  geometry.setAttribute(\n    \"normal\",\n    new BufferAttribute(\n      new Float32Array(normals.flatMap((v) => [v.x, v.y, v.z])),\n      3\n    )\n  );\n  geometry.setIndex(indices);\n\n  return geometry;\n}\n","import { LatheGeometry, Vector2 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\n\nexport function getSphereGeometry(\n  radius = 0.05,\n  resolution = 12\n): BufferGeometry {\n  const semicirclePoints = [];\n  for (let i = 0; i <= resolution; i++) {\n    semicirclePoints.push(\n      new Vector2(\n        radius * Math.sin((i * Math.PI) / resolution),\n        -radius * Math.cos((i * Math.PI) / resolution)\n      )\n    );\n  }\n\n  return new LatheGeometry(semicirclePoints, 2 * resolution);\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useState,\n} from \"react\";\n\ntype Settings = {\n  nodeRadius: number;\n  guidePointRadius: number;\n  highlightWidth: number;\n  arrowRadius: number;\n};\n\nconst SettingsContext = createContext<Settings>({\n  nodeRadius: 0,\n  guidePointRadius: 0,\n  highlightWidth: 0,\n  arrowRadius: 0,\n});\n\nexport function SettingsContextProvider({\n  children,\n}: {\n  children: ReactNode;\n}): ReactElement {\n  const [nodeRadius] = useState(0.1);\n  const [guidePointRadius] = useState(0.07);\n  const [highlightWidth] = useState(0.005);\n  const [arrowRadius] = useState(0.02);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        nodeRadius,\n        guidePointRadius,\n        highlightWidth,\n        arrowRadius,\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport function useSettings(): Settings {\n  return useContext(SettingsContext);\n}\n","import React from \"react\";\nimport Color from \"color\";\nimport { BackSide } from \"three\";\n\ninterface Props {\n  color: Color;\n}\n\nexport function HighlightMaterial({ color }: Props): React.ReactElement {\n  return (\n    <meshBasicMaterial\n      attach=\"material\"\n      color={color.toString()}\n      side={BackSide}\n    />\n  );\n}\n","import React from \"react\";\nimport Color from \"color\";\n\ninterface Props {\n  color: Color;\n}\n\nexport function SolidMaterial({ color }: Props): React.ReactElement {\n  return (\n    <meshStandardMaterial\n      attach=\"material\"\n      color={color.toString()}\n      emissiveIntensity={0}\n      roughness={0.5}\n    />\n  );\n}\n","import React from \"react\";\nimport Color from \"color\";\nimport { BackSide, DoubleSide } from \"three\";\n\ninterface Props {\n  color: Color;\n  twoSided?: boolean;\n}\n\nexport function TranslucentMaterial({\n  color,\n  twoSided = false,\n}: Props): React.ReactElement {\n  return (\n    <meshStandardMaterial\n      attach=\"material\"\n      color={color.toString()}\n      opacity={0.3}\n      transparent\n      side={twoSided ? DoubleSide : BackSide}\n    />\n  );\n}\n","import Color from \"color\";\n\nexport const Colors = {\n  HIGHLIGHTS: [Color(\"#8dff13\"), Color(\"#ff12bc\")],\n  BLACK: Color(\"#000000\"),\n  DARK: Color(\"#0d1416\"),\n  GREY: Color(\"#475154\"),\n  LIGHT: Color(\"#f7f9f9\"),\n  WHITE: Color(\"#FFFFFF\"),\n  LIGHTING: {\n    WARM: Color(\"#FFCCCC\"),\n    NEUTRAL: Color(\"#E5CCE5\"),\n    COLD: Color(\"#CCCCFF\"),\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\nimport Color from \"color\";\n\ninterface Props {\n  size?: \"small\" | \"tiny\";\n  color?: Color;\n  children: React.ReactNode;\n  unselectable?: boolean;\n  monospace?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport function T({\n  size,\n  color,\n  unselectable,\n  monospace,\n  children,\n  style,\n}: Props): React.ReactElement {\n  const finalStyle = {\n    color: (color || Colors.LIGHT.fade(0.2)).toString(),\n    fontSize:\n      size === \"tiny\" ? 8 : size === \"small\" ? 11 : size === \"big\" ? 16 : 12,\n    fontFamily: monospace ? \"monospace\" : undefined,\n    ...style,\n  };\n\n  return unselectable ? (\n    <UnselectableText style={finalStyle}>{children}</UnselectableText>\n  ) : (\n    <div style={finalStyle}>{children}</div>\n  );\n}\n\nconst UnselectableText = styled.div`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n","import React, {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useDrag } from \"react-use-gesture\";\nimport { Group, Plane, Raycaster, Vector2, Vector3 } from \"three\";\nimport { useEnvironment } from \"./useEnvironment\";\nimport { ClickEvent } from \"./ClickEvent\";\n\ntype Props = {\n  position?: Vector3;\n  onClick?: (event: ClickEvent) => void;\n  children?: ReactNode;\n};\n\nexport const Draggable = ({\n  position = new Vector3(0, 0, 0),\n  onClick,\n  children,\n}: Props): ReactElement => {\n  const objectRef = useRef<Group>(null);\n  const { setCurrentlyDragging } = useEnvironment();\n  const { camera, size } = useThree();\n\n  // Raycaster and plane used to project the mouse movements from the camera onto the plane\n  const raycaster = useMemo(() => new Raycaster(), []);\n  const planeRef = useRef(new Plane(new Vector3(0, 0, 1)));\n  const mouseObjectOffset = useRef(new Vector3(0, 0, 0));\n\n  useEffect(() => {\n    if (objectRef.current) {\n      objectRef.current.position.copy(position);\n    }\n  }, []);\n\n  const screenToSpace = useCallback((x: number, y: number): Vector3 => {\n    const screenCoords = new Vector2(\n      (x / size.width) * 2 - 1,\n      -(y / size.height) * 2 + 1\n    );\n\n    const intersection = new Vector3();\n    raycaster.setFromCamera(screenCoords, camera);\n    raycaster.ray.intersectPlane(planeRef.current, intersection);\n\n    return intersection;\n  }, []);\n\n  const bind = useDrag(\n    ({ xy: [x, y], movement: [dx, dy], first, last, event }) => {\n      event.stopPropagation();\n      if (first) {\n        setCurrentlyDragging(true);\n\n        const cameraDirection = new Vector3();\n        camera.getWorldDirection(cameraDirection);\n        planeRef.current.setFromNormalAndCoplanarPoint(\n          cameraDirection,\n          objectRef.current?.position || new Vector3(0, 0, 0)\n        );\n\n        mouseObjectOffset.current =\n          objectRef.current?.position.clone().sub(screenToSpace(x, y)) ||\n          new Vector3(0, 0, 0);\n      }\n\n      if (objectRef.current) {\n        objectRef.current.position.copy(\n          screenToSpace(x, y).add(mouseObjectOffset.current)\n        );\n      }\n\n      if (last) {\n        setCurrentlyDragging(false);\n        if (objectRef.current) position.copy(objectRef.current.position);\n        if (dx === 0 && dy === 0) onClick?.(event);\n      }\n    }\n  ) as () => {};\n\n  return (\n    <group {...bind()} ref={objectRef}>\n      {children}\n    </group>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport {\n  getArrowheadGeometry,\n  getBezierTubeGeometry,\n  getSphereGeometry,\n} from \"../geometries\";\nimport { Arrow as ArrowType, Elements } from \"logic\";\nimport { useSettings } from \"../useSettings\";\nimport {\n  HighlightMaterial,\n  SolidMaterial,\n  TranslucentMaterial,\n} from \"../materials\";\nimport { Colors } from \"ui\";\nimport { Draggable } from \"../Draggable\";\n\ninterface Props {\n  arrow: ArrowType;\n  elements: Elements;\n}\n\nexport function Arrow({\n  arrow: { id, guidePoint },\n  elements,\n}: Props): ReactElement {\n  const { arrowRadius, highlightWidth, guidePointRadius, nodeRadius } =\n    useSettings();\n  const selectionState = elements.selectionState(id);\n  const highlightColour = selectionState === \"primary\" ? 0 : 1;\n\n  return (\n    <>\n      <mesh\n        key={id}\n        geometry={getBezierTubeGeometry(\n          elements.getArrowPoints(id),\n          arrowRadius\n        )}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      <mesh\n        key={id}\n        geometry={getArrowheadGeometry(\n          elements.getArrowPoints(id),\n          0.07,\n          0.14,\n          nodeRadius / 3\n        )}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      {selectionState && (\n        <>\n          <mesh\n            key={id + \"highlight\"}\n            geometry={getBezierTubeGeometry(\n              elements.getArrowPoints(id),\n              arrowRadius + highlightWidth\n            )}\n          >\n            <HighlightMaterial color={Colors.HIGHLIGHTS[highlightColour]} />\n          </mesh>\n          <Draggable position={guidePoint} key={id + \"guidePoint\"}>\n            <mesh geometry={getSphereGeometry(guidePointRadius)}>\n              <TranslucentMaterial color={Colors.HIGHLIGHTS[highlightColour]} />\n            </mesh>\n          </Draggable>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { getSphereGeometry } from \"../geometries\";\nimport { Elements, Node as NodeType } from \"logic\";\nimport { useSettings } from \"../useSettings\";\nimport { HighlightMaterial, SolidMaterial } from \"../materials\";\nimport { Colors } from \"ui\";\nimport { Draggable } from \"../Draggable\";\nimport { ClickEvent } from \"../ClickEvent\";\n\ninterface Props {\n  node: NodeType;\n  elements: Elements;\n}\n\nexport function Node({\n  node: { id, position },\n  elements,\n}: Props): ReactElement {\n  const { nodeRadius, highlightWidth } = useSettings();\n\n  return (\n    <Draggable\n      position={position}\n      key={id}\n      onClick={(event: ClickEvent): void => elements.onClick(id, event)}\n    >\n      <mesh geometry={getSphereGeometry(nodeRadius)}>\n        <SolidMaterial color={Colors.GREY} />\n      </mesh>\n      {elements.selectionState(id) && (\n        <mesh geometry={getSphereGeometry(nodeRadius + highlightWidth)}>\n          <HighlightMaterial color={Colors.HIGHLIGHTS[0]} />\n        </mesh>\n      )}\n    </Draggable>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Elements, TwoArrow as TwoArrowType } from \"logic\";\nimport { TranslucentMaterial } from \"../materials\";\nimport { Colors } from \"ui\";\nimport { getBezierSurfaceGeometry } from \"../geometries\";\n\ninterface Props {\n  twoArrow: TwoArrowType;\n  elements: Elements;\n}\n\nexport function TwoArrow({\n  twoArrow: { id, domainIds, codomainIds, guidePoint },\n  elements,\n}: Props): ReactElement {\n  return (\n    <>\n      <mesh\n        key={id}\n        geometry={getBezierSurfaceGeometry(\n          domainIds.map(elements.getArrowPoints.bind(elements)),\n          codomainIds.map(elements.getArrowPoints.bind(elements)),\n          guidePoint\n        )}\n        onClick={(event): void => elements.onClick(id, event)}\n      >\n        <TranslucentMaterial color={Colors.HIGHLIGHTS[0]} twoSided />\n      </mesh>\n    </>\n  );\n}\n","import React, { useEffect, useMemo, useRef } from \"react\";\nimport { Plane, Raycaster, Vector2, Vector3 } from \"three\";\nimport { useEnvironment } from \"./useEnvironment\";\nimport { useThree } from \"@react-three/fiber\";\nimport { Elements } from \"logic\";\nimport { Arrow, Node, TwoArrow } from \"./entities\";\nimport { useToasts } from \"react-toast-notifications\";\n\nexport function Content(): React.ReactElement {\n  const { setOnBackgroundClick, render } = useEnvironment();\n  const { addToast } = useToasts();\n  const elements = useRef(new Elements(render, addToast)).current;\n  const { camera, size } = useThree();\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", elements.onKeyDown.bind(elements));\n\n    return (): void => {\n      document.removeEventListener(\n        \"keydown\",\n        elements.onKeyDown.bind(elements)\n      );\n    };\n  }, []);\n\n  const raycaster = useMemo(() => new Raycaster(), []);\n  const plane = useMemo(() => new Plane(new Vector3(0, 1, 0)), []);\n\n  // TODO: fix click behaviour after resizing\n  useEffect(\n    () =>\n      setOnBackgroundClick(() => (event: MouseEvent): void => {\n        if (\n          event.ctrlKey ||\n          event.altKey ||\n          event.metaKey ||\n          event.shiftKey ||\n          event.button > 1\n        ) {\n          return;\n        }\n\n        const screenCoords = new Vector2(\n          (event.x / size.width) * 2 - 1,\n          -(event.y / size.height) * 2 + 1\n        );\n\n        const intersection = new Vector3();\n        raycaster.setFromCamera(screenCoords, camera);\n        raycaster.ray.intersectPlane(plane, intersection);\n\n        elements.addNode(intersection);\n        render();\n      }),\n    [setOnBackgroundClick]\n  );\n\n  return (\n    <>\n      {elements.getNodes().map((node) => (\n        <Node node={node} elements={elements} key={node.id} />\n      ))}\n      {elements.getArrows().map((arrow) => (\n        <Arrow arrow={arrow} elements={elements} key={arrow.id} />\n      ))}\n      {elements.getTwoArrows().map((twoArrow) => (\n        <TwoArrow twoArrow={twoArrow} elements={elements} key={twoArrow.id} />\n      ))}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Colors } from \"ui\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={0.45} />\n      <directionalLight\n        position={[0, 0, 20]}\n        color={Colors.LIGHTING.WARM.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[17, 0, -10]}\n        color={Colors.LIGHTING.COLD.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[-17, 0, -10]}\n        color={Colors.LIGHTING.NEUTRAL.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[0, 20, 0]}\n        color={Colors.LIGHTING.WARM.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[0, -20, 0]}\n        color={Colors.LIGHTING.COLD.toString()}\n        castShadow={true}\n      />\n    </>\n  );\n};\n","import React, { ReactNode, useCallback, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { Colors } from \"ui\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { EnvironmentContextProvider } from \"./useEnvironment\";\nimport { ControlMode } from \"./ControlMode\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  const [currentlyDragging, setCurrentlyDragging] = useState(false);\n  const [controlMode, setControlMode] = useState<ControlMode>(\"view\");\n  const [onBackgroundClick, setOnBackgroundClick] = useState<\n    (event: MouseEvent) => void\n  >(() => {});\n\n  const [_, setRenderHelper] = useState(false);\n  const render = useCallback((): void => setRenderHelper((x) => !x), []);\n\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <EnvironmentContextProvider\n        environment={{\n          setCurrentlyDragging,\n          setOnBackgroundClick,\n          setControlMode,\n          controlMode,\n          render,\n        }}\n      >\n        <Canvas\n          style={{ background: Colors.BLACK.toString() }}\n          camera={{ position: [4, 4, 10] }}\n          onPointerMissed={onBackgroundClick}\n          shadows\n        >\n          <gridHelper args={[20, 20]} />\n          <Lighting />\n          {children}\n          {!currentlyDragging && controlMode == \"view\" && (\n            <OrbitControls autoRotate={false} />\n          )}\n        </Canvas>\n      </EnvironmentContextProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Content } from \"components\";\nimport { Environment } from \"./components/Environment\";\nimport { SettingsContextProvider } from \"./components/useSettings\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\n// TODO: Consider replacing the Toast component https://www.npmjs.com/package/react-toast-notifications\nfunction App(): React.ReactElement {\n  return (\n    <SettingsContextProvider>\n      <ToastProvider autoDismiss={true} placement={\"bottom-left\"}>\n        <Environment>\n          <Content />\n        </Environment>\n      </ToastProvider>\n    </SettingsContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// TODO: Replace with createRoot\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
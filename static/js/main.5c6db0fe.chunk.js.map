{"version":3,"sources":["ui/Colors.ts","ui/Row.tsx","ui/T.tsx","components/geometries/sphereGeometry.ts","components/useEnvironment.tsx","components/Draggable.tsx","components/Content.tsx","components/Lighting.tsx","components/Environment.tsx","App.tsx","index.tsx"],"names":["Colors","DARKEST","Color","DARKER","DARK","LIGHT","GREY","FOCUS","ACCENT_BLUE","ACCENT_ORANGE","SUPER_ACCENT","RED","BLUE","TRANSPARENT","alpha","BLACK","WHITE","LIGHTING","WARM","NEUTRAL","COLD","styled","div","getSphereGeometry","radius","resolution","semicirclePoints","i","push","Vector2","Math","sin","PI","cos","LatheGeometry","EnvironmentContext","createContext","setCurrentlyDragging","EnvironmentContextProvider","children","environment","Provider","value","Draggable","initialPosition","Vector3","objectRef","useRef","useContext","useThree","camera","size","raycaster","useMemo","Raycaster","planeRef","Plane","mouseObjectOffset","useEffect","current","position","copy","screenToSpace","useCallback","x","y","screenCoords","width","height","intersection","setFromCamera","ray","intersectPlane","bind","useDrag","xy","first","last","cameraDirection","getWorldDirection","setFromNormalAndCoplanarPoint","clone","sub","add","ref","Content","geometry","receiveShadow","attach","color","toString","emissive","emissiveIntensity","roughness","Lighting","intensity","castShadow","Environment","useState","currentlyDragging","style","left","right","top","bottom","background","shadows","OrbitControls","autoRotate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEaA,EAAS,CACpBC,QAASC,IAAM,WACfC,OAAQD,IAAM,WACdE,KAAMF,IAAM,WACZG,MAAOH,IAAM,WACbI,KAAMJ,IAAM,WACZK,MAAOL,IAAM,WACbM,YAAaN,IAAM,WACnBO,cAAeP,IAAM,WACrBQ,aAAcR,IAAM,WACpBS,IAAKT,IAAM,WACXU,KAAMV,IAAM,WACZW,YAAaX,IAAM,WAAWY,MAAM,GACpCC,MAAOb,IAAM,WACbc,MAAOd,IAAM,WACbe,SAAU,CACRC,KAAMhB,IAAM,WACZiB,QAASjB,IAAM,WACfkB,KAAMlB,IAAM,a,2BClBGmB,IAAOC,IAAV,8F,MCmCSD,IAAOC,IAAV,kM,8BClCf,SAASC,IAKd,IAFiB,IAFjBC,EAEgB,uDAFP,IACTC,EACgB,uDADH,GAEPC,EAAmB,GAChBC,EAAI,EAAGA,GAAKF,EAAYE,IAC/BD,EAAiBE,KACf,IAAIC,UACFL,EAASM,KAAKC,IAAKJ,EAAIG,KAAKE,GAAMP,GAClCD,EAASM,KAAKG,IAAKN,EAAIG,KAAKE,GAAMP,KAKxC,OAAO,IAAIS,gBAAcR,EAAkB,EAAID,G,oBCN3CU,EAAqBC,wBAA2B,CACpDC,qBAAsB,eAGjB,SAASC,EAAT,GAMW,IALhBC,EAKe,EALfA,SACAC,EAIe,EAJfA,YAKA,OACE,cAACL,EAAmBM,SAApB,CAA6BC,MAAOF,EAApC,SACGD,ICPA,IAAMI,EAAsC,SAAC,GAG7C,IAFLJ,EAEI,EAFJA,SAEI,IADJK,uBACI,MADc,IAAIC,UAAQ,EAAG,EAAG,GAChC,EACEC,EAAYC,iBAAc,MACxBV,EDQDW,qBAAWb,GCRVE,qBAFJ,EAGqBY,cAAjBC,EAHJ,EAGIA,OAAQC,EAHZ,EAGYA,KAGVC,EAAYC,mBAAQ,kBAAM,IAAIC,cAAa,IAC3CC,EAAWR,iBAAO,IAAIS,QAAM,IAAIX,UAAQ,EAAG,EAAG,KAC9CY,EAAoBV,iBAAO,IAAIF,UAAQ,EAAG,EAAG,IAEnDa,qBAAU,WACJZ,EAAUa,SACZb,EAAUa,QAAQC,SAASC,KAAKjB,KAEjC,IAEH,IAAMkB,EAAgBC,uBAAY,SAACC,EAAWC,GAC5C,IAAMC,EAAe,IAAIrC,UACtBmC,EAAIb,EAAKgB,MAAS,EAAI,GACrBF,EAAId,EAAKiB,OAAU,EAAI,GAGrBC,EAAe,IAAIxB,UAIzB,OAHAO,EAAUkB,cAAcJ,EAAchB,GACtCE,EAAUmB,IAAIC,eAAejB,EAASI,QAASU,GAExCA,IACN,IAEGI,EAAOC,aAAQ,YAAkC,IAAD,gBAA9BC,GAA8B,GAAzBX,EAAyB,KAAtBC,EAAsB,KAAlBW,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACzC,GAAID,EAAO,CAAC,IAAD,IACTvC,GAAqB,GAErB,IAAMyC,EAAkB,IAAIjC,UAC5BK,EAAO6B,kBAAkBD,GACzBvB,EAASI,QAAQqB,8BACfF,GACA,UAAAhC,EAAUa,eAAV,eAAmBC,WAAY,IAAIf,UAAQ,EAAG,EAAG,IAGnDY,EAAkBE,SAChB,UAAAb,EAAUa,eAAV,eAAmBC,SAASqB,QAAQC,IAAIpB,EAAcE,EAAGC,MACzD,IAAIpB,UAAQ,EAAG,EAAG,GAElBgC,GAAMxC,GAAqB,GAE3BS,EAAUa,SACZb,EAAUa,QAAQC,SAASC,KACzBC,EAAcE,EAAGC,GAAGkB,IAAI1B,EAAkBE,aAKhD,OACE,iDAAWc,KAAX,IAAmBW,IAAKtC,EAAxB,SACGP,MCtEA,SAAS8C,IACd,OACE,cAAC,EAAD,UACE,sBAAMC,SAAU/D,EAAkB,GAAIgE,eAAa,EAAnD,SACE,sCACEC,OAAO,WACPC,MAAOzF,EAAOI,KAAKsF,WACnBC,SAAU3F,EAAOI,KAAKsF,WACtBE,kBAAmB,EACnBC,UAAW,S,YCXRC,EAAe,WAE1B,OACE,qCACE,8BAAcC,UAAW,MACzB,kCACEnC,SAAU,CAAC,EAAG,EAAG,IACjB6B,MAAOzF,EAAOiB,SAASC,KAAKwE,WAC5BM,YAAY,IAEd,kCACEpC,SAAU,CAAC,GAAI,GAAI,IACnB6B,MAAOzF,EAAOiB,SAASG,KAAKsE,WAC5BM,YAAY,IAEd,kCACEpC,SAAU,EAAE,GAAI,GAAI,IACpB6B,MAAOzF,EAAOiB,SAASE,QAAQuE,WAC/BM,YAAY,Q,SCdb,SAASC,EAAT,GAIiB,IAHtB1D,EAGqB,EAHrBA,SAGqB,EAC6B2D,oBAAS,GADtC,mBACdC,EADc,KACK9D,EADL,KAGrB,OACE,qBAAK+D,MAAO,CAAExC,SAAU,WAAYyC,KAAM,EAAGC,MAAO,EAAGC,IAAK,EAAGC,OAAQ,GAAvE,SACE,cAAClE,EAAD,CAA4BE,YAAa,CAAEH,wBAA3C,SACE,eAAC,IAAD,CACE+D,MAAO,CAAEK,WAAYzG,EAAOe,MAAM2E,YAClCxC,OAAQ,CAAEU,SAAU,CAAC,EAAG,EAAG,KAC3B8C,SAAO,EAHT,UAKE,cAAC,EAAD,IACCnE,EACA4D,GAAqB,cAACQ,EAAA,EAAD,CAAeC,YAAY,WCZ5CC,MARf,WACE,OACE,cAACZ,EAAD,UACE,cAACZ,EAAD,OCFNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c6db0fe.chunk.js","sourcesContent":["import Color from \"color\";\n\nexport const Colors = {\n  DARKEST: Color(\"#0d1416\"),\n  DARKER: Color(\"#1d2426\"),\n  DARK: Color(\"#283134\"),\n  LIGHT: Color(\"#f7f9f9\"),\n  GREY: Color(\"#CCCCCC\"),\n  FOCUS: Color(\"#5577FF\"),\n  ACCENT_BLUE: Color(\"#5ed6ff\"),\n  ACCENT_ORANGE: Color(\"#FF875E\"),\n  SUPER_ACCENT: Color(\"#ff6e3d\"),\n  RED: Color(\"#FF0000\"),\n  BLUE: Color(\"#0000FF\"),\n  TRANSPARENT: Color(\"#000000\").alpha(0),\n  BLACK: Color(\"#000000\"),\n  WHITE: Color(\"#FFFFFF\"),\n  LIGHTING: {\n    WARM: Color(\"#FFCCCC\"),\n    NEUTRAL: Color(\"#E5CCE5\"),\n    COLD: Color(\"#CCCCFF\"),\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\nimport Color from \"color\";\n\ninterface Props {\n  size?: \"small\" | \"tiny\";\n  color?: Color;\n  children: React.ReactNode;\n  unselectable?: boolean;\n  monospace?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport function T({\n  size,\n  color,\n  unselectable,\n  monospace,\n  children,\n  style,\n}: Props): React.ReactElement {\n  const finalStyle = {\n    color: (color || Colors.LIGHT.fade(0.2)).toString(),\n    fontSize:\n      size === \"tiny\" ? 8 : size === \"small\" ? 11 : size === \"big\" ? 16 : 12,\n    fontFamily: monospace ? \"monospace\" : undefined,\n    ...style,\n  };\n\n  return unselectable ? (\n    <UnselectableText style={finalStyle}>{children}</UnselectableText>\n  ) : (\n    <div style={finalStyle}>{children}</div>\n  );\n}\n\nconst UnselectableText = styled.div`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n","import { LatheGeometry, Vector2 } from \"three\";\nimport { BufferGeometry } from \"three/src/core/BufferGeometry\";\n\nexport function getSphereGeometry(\n  radius = 0.05,\n  resolution = 12\n): BufferGeometry {\n  const semicirclePoints = [];\n  for (let i = 0; i <= resolution; i++) {\n    semicirclePoints.push(\n      new Vector2(\n        radius * Math.sin((i * Math.PI) / resolution),\n        radius * Math.cos((i * Math.PI) / resolution)\n      )\n    );\n  }\n\n  return new LatheGeometry(semicirclePoints, 2 * resolution);\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\n\ntype Environment = {\n  setCurrentlyDragging: (enabled: boolean) => void;\n};\n\nconst EnvironmentContext = createContext<Environment>({\n  setCurrentlyDragging: () => {},\n});\n\nexport function EnvironmentContextProvider({\n  children,\n  environment,\n}: {\n  environment: Environment;\n  children: ReactNode;\n}): ReactElement {\n  return (\n    <EnvironmentContext.Provider value={environment}>\n      {children}\n    </EnvironmentContext.Provider>\n  );\n}\n\nexport function useEnvironment(): Environment {\n  return useContext(EnvironmentContext);\n}\n","import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useDrag } from \"react-use-gesture\";\nimport { Group, Plane, Raycaster, Vector2, Vector3 } from \"three\";\nimport { useEnvironment } from \"./useEnvironment\";\n\ntype DraggableProps = {\n  initialPosition?: Vector3;\n  children?: ReactNode;\n};\n\nexport const Draggable: React.FC<DraggableProps> = ({\n  children,\n  initialPosition = new Vector3(0, 0, 0),\n}) => {\n  const objectRef = useRef<Group>(null);\n  const { setCurrentlyDragging } = useEnvironment();\n  const { camera, size } = useThree();\n\n  // Raycaster and plane used to project the mouse movements from the camera onto the plane\n  const raycaster = useMemo(() => new Raycaster(), []);\n  const planeRef = useRef(new Plane(new Vector3(0, 0, 1)));\n  const mouseObjectOffset = useRef(new Vector3(0, 0, 0));\n\n  useEffect(() => {\n    if (objectRef.current) {\n      objectRef.current.position.copy(initialPosition);\n    }\n  }, []);\n\n  const screenToSpace = useCallback((x: number, y: number): Vector3 => {\n    const screenCoords = new Vector2(\n      (x / size.width) * 2 - 1,\n      -(y / size.height) * 2 + 1\n    );\n\n    const intersection = new Vector3();\n    raycaster.setFromCamera(screenCoords, camera);\n    raycaster.ray.intersectPlane(planeRef.current, intersection);\n\n    return intersection;\n  }, []);\n\n  const bind = useDrag(({ xy: [x, y], first, last }) => {\n    if (first) {\n      setCurrentlyDragging(false);\n\n      const cameraDirection = new Vector3();\n      camera.getWorldDirection(cameraDirection);\n      planeRef.current.setFromNormalAndCoplanarPoint(\n        cameraDirection,\n        objectRef.current?.position || new Vector3(0, 0, 0)\n      );\n\n      mouseObjectOffset.current =\n        objectRef.current?.position.clone().sub(screenToSpace(x, y)) ||\n        new Vector3(0, 0, 0);\n    }\n    if (last) setCurrentlyDragging(true);\n\n    if (objectRef.current) {\n      objectRef.current.position.copy(\n        screenToSpace(x, y).add(mouseObjectOffset.current)\n      );\n    }\n  }) as () => {};\n\n  return (\n    <group {...bind()} ref={objectRef}>\n      {children}\n    </group>\n  );\n};\n","import React from \"react\";\nimport { Colors } from \"ui\";\nimport { getSphereGeometry } from \"./geometries/sphereGeometry\";\nimport { Draggable } from \"./Draggable\";\n\nexport function Content(): React.ReactElement {\n  return (\n    <Draggable>\n      <mesh geometry={getSphereGeometry(1)} receiveShadow>\n        <meshStandardMaterial\n          attach=\"material\"\n          color={Colors.DARK.toString()}\n          emissive={Colors.DARK.toString()}\n          emissiveIntensity={0}\n          roughness={0.5}\n        />\n      </mesh>\n    </Draggable>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Colors } from \"ui\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={0.45} />\n      <directionalLight\n        position={[0, 0, 20]}\n        color={Colors.LIGHTING.WARM.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[17, 0, -10]}\n        color={Colors.LIGHTING.COLD.toString()}\n        castShadow={true}\n      />\n      <directionalLight\n        position={[-17, 0, -10]}\n        color={Colors.LIGHTING.NEUTRAL.toString()}\n        castShadow={true}\n      />\n    </>\n  );\n};\n","import React, { ReactNode, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { Colors } from \"ui\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { EnvironmentContextProvider } from \"./useEnvironment\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  const [currentlyDragging, setCurrentlyDragging] = useState(true);\n\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <EnvironmentContextProvider environment={{ setCurrentlyDragging }}>\n        <Canvas\n          style={{ background: Colors.BLACK.toString() }}\n          camera={{ position: [0, 0, 10] }}\n          shadows\n        >\n          <Lighting />\n          {children}\n          {currentlyDragging && <OrbitControls autoRotate={false} />}\n        </Canvas>\n      </EnvironmentContextProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Content } from \"components\";\nimport { Environment } from \"./components/Environment\";\n\nfunction App(): React.ReactElement {\n  return (\n    <Environment>\n      <Content />\n    </Environment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}